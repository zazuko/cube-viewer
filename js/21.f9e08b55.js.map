{"version":3,"file":"js/21.f9e08b55.js","mappings":"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","sources":["webpack://cube-viewer/./node_modules/@rdfjs/serializer-jsonld-ext/index.js","webpack://cube-viewer/./node_modules/@rdfjs/serializer-jsonld-ext/lib/SerializerStream.js","webpack://cube-viewer/./node_modules/@rdfjs/serializer-jsonld-ext/lib/streamConcat.js","webpack://cube-viewer/./node_modules/@rdfjs/serializer-jsonld-ext/node_modules/concat-stream/index.js","webpack://cube-viewer/./node_modules/jsonld/lib/ContextResolver.js","webpack://cube-viewer/./node_modules/jsonld/lib/JsonLdError.js","webpack://cube-viewer/./node_modules/jsonld/lib/JsonLdProcessor.js","webpack://cube-viewer/./node_modules/jsonld/lib/NQuads.js","webpack://cube-viewer/./node_modules/jsonld/lib/RequestQueue.js","webpack://cube-viewer/./node_modules/jsonld/lib/ResolvedContext.js","webpack://cube-viewer/./node_modules/jsonld/lib/compact.js","webpack://cube-viewer/./node_modules/jsonld/lib/constants.js","webpack://cube-viewer/./node_modules/jsonld/lib/context.js","webpack://cube-viewer/./node_modules/jsonld/lib/documentLoaders/xhr.js","webpack://cube-viewer/./node_modules/jsonld/lib/expand.js","webpack://cube-viewer/./node_modules/jsonld/lib/flatten.js","webpack://cube-viewer/./node_modules/jsonld/lib/frame.js","webpack://cube-viewer/./node_modules/jsonld/lib/fromRdf.js","webpack://cube-viewer/./node_modules/jsonld/lib/graphTypes.js","webpack://cube-viewer/./node_modules/jsonld/lib/jsonld.js","webpack://cube-viewer/./node_modules/jsonld/lib/nodeMap.js","webpack://cube-viewer/./node_modules/jsonld/lib/platform-browser.js","webpack://cube-viewer/./node_modules/jsonld/lib/toRdf.js","webpack://cube-viewer/./node_modules/jsonld/lib/types.js","webpack://cube-viewer/./node_modules/jsonld/lib/url.js","webpack://cube-viewer/./node_modules/jsonld/lib/util.js","webpack://cube-viewer/./node_modules/lru-cache/index.js","webpack://cube-viewer/./node_modules/rdf-canonize/index.js","webpack://cube-viewer/./node_modules/rdf-canonize/lib/URDNA2015.js","webpack://cube-viewer/./node_modules/rdf-canonize/lib/URGNA2012.js","webpack://cube-viewer/./node_modules/rdf-canonize/lib/URGNA2012Sync.js","webpack://cube-viewer/./node_modules/rdf-canonize/lib/index.js","webpack://cube-viewer/./node_modules/yallist/iterator.js","webpack://cube-viewer/./node_modules/yallist/yallist.js"],"sourcesContent":["const Sink = require('@rdfjs/sink')\nconst SerializerStream = require('./lib/SerializerStream')\n\nclass Serializer extends Sink {\n  constructor (options) {\n    super(SerializerStream, options)\n  }\n}\n\nmodule.exports = Serializer\n","const jsonld = require('jsonld')\nconst { Readable } = require('readable-stream')\nconst streamConcat = require('./streamConcat')\n\nclass SerializerStream extends Readable {\n  constructor (input, {\n    context = {},\n    compact,\n    flatten,\n    frame,\n    skipContext,\n    encoding = 'object'\n  } = {}) {\n    super({\n      objectMode: true,\n      read: () => {}\n    })\n\n    this.context = context\n    this.compact = compact\n    this.flatten = flatten\n    this.frame = frame\n    this.skipContext = skipContext\n    this.encoding = encoding\n\n    input.on('prefix', (prefix, namespace) => {\n      if (!this.context[prefix]) {\n        this.context[prefix] = namespace.value\n      }\n    })\n\n    this.handleData(input)\n  }\n\n  async handleData (input) {\n    try {\n      const quadArray = (await streamConcat(input)).map(SerializerStream.toJsonldQuad)\n      const rawJsonld = await jsonld.fromRDF(quadArray)\n      const transformedJsonld = await this.transform(rawJsonld, this.options)\n\n      this.push(transformedJsonld)\n      this.push(null)\n    } catch (err) {\n      this.emit('error', err)\n    }\n  }\n\n  async transform (data) {\n    if (this.compact) {\n      data = await jsonld.compact(data, this.context)\n    }\n\n    if (this.flatten) {\n      data = await jsonld.flatten(data, this.context)\n    }\n\n    if (this.frame) {\n      data = await jsonld.frame(data, this.context)\n    }\n\n    if (this.skipContext && data['@context']) {\n      delete data['@context']\n    }\n\n    if (this.encoding === 'string') {\n      return JSON.stringify(data)\n    }\n\n    return data\n  }\n\n  static toJsonldQuad (quad) {\n    return {\n      subject: SerializerStream.toJsonldTerm(quad.subject),\n      predicate: SerializerStream.toJsonldTerm(quad.predicate),\n      object: SerializerStream.toJsonldTerm(quad.object),\n      graph: SerializerStream.toJsonldTerm(quad.graph)\n    }\n  }\n\n  static toJsonldTerm (term) {\n    if (term.termType === 'BlankNode') {\n      return {\n        termType: 'BlankNode',\n        value: `_:${term.value}`\n      }\n    }\n\n    return term\n  }\n}\n\nmodule.exports = SerializerStream\n","const concatStream = require('concat-stream')\n\nfunction streamConcat (stream) {\n  return new Promise((resolve, reject) => {\n    stream.on('error', err => {\n      reject(err)\n    })\n\n    stream.pipe(concatStream(content => {\n      resolve(content)\n    }))\n  })\n}\n\nmodule.exports = streamConcat\n","var Writable = require('readable-stream').Writable\nvar inherits = require('inherits')\nvar bufferFrom = require('buffer-from')\n\nif (typeof Uint8Array === 'undefined') {\n  var U8 = require('typedarray').Uint8Array\n} else {\n  var U8 = Uint8Array\n}\n\nfunction ConcatStream(opts, cb) {\n  if (!(this instanceof ConcatStream)) return new ConcatStream(opts, cb)\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n  if (!opts) opts = {}\n\n  var encoding = opts.encoding\n  var shouldInferEncoding = false\n\n  if (!encoding) {\n    shouldInferEncoding = true\n  } else {\n    encoding =  String(encoding).toLowerCase()\n    if (encoding === 'u8' || encoding === 'uint8') {\n      encoding = 'uint8array'\n    }\n  }\n\n  Writable.call(this, { objectMode: true })\n\n  this.encoding = encoding\n  this.shouldInferEncoding = shouldInferEncoding\n\n  if (cb) this.on('finish', function () { cb(this.getBody()) })\n  this.body = []\n}\n\nmodule.exports = ConcatStream\ninherits(ConcatStream, Writable)\n\nConcatStream.prototype._write = function(chunk, enc, next) {\n  this.body.push(chunk)\n  next()\n}\n\nConcatStream.prototype.inferEncoding = function (buff) {\n  var firstBuffer = buff === undefined ? this.body[0] : buff;\n  if (Buffer.isBuffer(firstBuffer)) return 'buffer'\n  if (typeof Uint8Array !== 'undefined' && firstBuffer instanceof Uint8Array) return 'uint8array'\n  if (Array.isArray(firstBuffer)) return 'array'\n  if (typeof firstBuffer === 'string') return 'string'\n  if (Object.prototype.toString.call(firstBuffer) === \"[object Object]\") return 'object'\n  return 'buffer'\n}\n\nConcatStream.prototype.getBody = function () {\n  if (!this.encoding && this.body.length === 0) return []\n  if (this.shouldInferEncoding) this.encoding = this.inferEncoding()\n  if (this.encoding === 'array') return arrayConcat(this.body)\n  if (this.encoding === 'string') return stringConcat(this.body)\n  if (this.encoding === 'buffer') return bufferConcat(this.body)\n  if (this.encoding === 'uint8array') return u8Concat(this.body)\n  return this.body\n}\n\nvar isArray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]'\n}\n\nfunction isArrayish (arr) {\n  return /Array\\]$/.test(Object.prototype.toString.call(arr))\n}\n\nfunction isBufferish (p) {\n  return typeof p === 'string' || isArrayish(p) || (p && typeof p.subarray === 'function')\n}\n\nfunction stringConcat (parts) {\n  var strings = []\n  var needsToString = false\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i]\n    if (typeof p === 'string') {\n      strings.push(p)\n    } else if (Buffer.isBuffer(p)) {\n      strings.push(p)\n    } else if (isBufferish(p)) {\n      strings.push(bufferFrom(p))\n    } else {\n      strings.push(bufferFrom(String(p)))\n    }\n  }\n  if (Buffer.isBuffer(parts[0])) {\n    strings = Buffer.concat(strings)\n    strings = strings.toString('utf8')\n  } else {\n    strings = strings.join('')\n  }\n  return strings\n}\n\nfunction bufferConcat (parts) {\n  var bufs = []\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i]\n    if (Buffer.isBuffer(p)) {\n      bufs.push(p)\n    } else if (isBufferish(p)) {\n      bufs.push(bufferFrom(p))\n    } else {\n      bufs.push(bufferFrom(String(p)))\n    }\n  }\n  return Buffer.concat(bufs)\n}\n\nfunction arrayConcat (parts) {\n  var res = []\n  for (var i = 0; i < parts.length; i++) {\n    res.push.apply(res, parts[i])\n  }\n  return res\n}\n\nfunction u8Concat (parts) {\n  var len = 0\n  for (var i = 0; i < parts.length; i++) {\n    if (typeof parts[i] === 'string') {\n      parts[i] = bufferFrom(parts[i])\n    }\n    len += parts[i].length\n  }\n  var u8 = new U8(len)\n  for (var i = 0, offset = 0; i < parts.length; i++) {\n    var part = parts[i]\n    for (var j = 0; j < part.length; j++) {\n      u8[offset++] = part[j]\n    }\n  }\n  return u8\n}\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n} = require('./types');\nconst {\n  asArray: _asArray\n} = require('./util');\nconst {prependBase} = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst ResolvedContext = require('./ResolvedContext');\n\nconst MAX_CONTEXT_URLS = 10;\n\nmodule.exports = class ContextResolver {\n  /**\n   * Creates a ContextResolver.\n   *\n   * @param sharedCache a shared LRU cache with `get` and `set` APIs.\n   */\n  constructor({sharedCache}) {\n    this.perOpCache = new Map();\n    this.sharedCache = sharedCache;\n  }\n\n  async resolve({\n    activeCtx, context, documentLoader, base, cycles = new Set()\n  }) {\n    // process `@context`\n    if(context && _isObject(context) && context['@context']) {\n      context = context['@context'];\n    }\n\n    // context is one or more contexts\n    context = _asArray(context);\n\n    // resolve each context in the array\n    const allResolved = [];\n    for(const ctx of context) {\n      if(_isString(ctx)) {\n        // see if `ctx` has been resolved before...\n        let resolved = this._get(ctx);\n        if(!resolved) {\n          // not resolved yet, resolve\n          resolved = await this._resolveRemoteContext(\n            {activeCtx, url: ctx, documentLoader, base, cycles});\n        }\n\n        // add to output and continue\n        if(_isArray(resolved)) {\n          allResolved.push(...resolved);\n        } else {\n          allResolved.push(resolved);\n        }\n        continue;\n      }\n      if(ctx === null) {\n        // handle `null` context, nothing to cache\n        allResolved.push(new ResolvedContext({document: null}));\n        continue;\n      }\n      if(!_isObject(ctx)) {\n        _throwInvalidLocalContext(context);\n      }\n      // context is an object, get/create `ResolvedContext` for it\n      const key = JSON.stringify(ctx);\n      let resolved = this._get(key);\n      if(!resolved) {\n        // create a new static `ResolvedContext` and cache it\n        resolved = new ResolvedContext({document: ctx});\n        this._cacheResolvedContext({key, resolved, tag: 'static'});\n      }\n      allResolved.push(resolved);\n    }\n\n    return allResolved;\n  }\n\n  _get(key) {\n    // get key from per operation cache; no `tag` is used with this cache so\n    // any retrieved context will always be the same during a single operation\n    let resolved = this.perOpCache.get(key);\n    if(!resolved) {\n      // see if the shared cache has a `static` entry for this URL\n      const tagMap = this.sharedCache.get(key);\n      if(tagMap) {\n        resolved = tagMap.get('static');\n        if(resolved) {\n          this.perOpCache.set(key, resolved);\n        }\n      }\n    }\n    return resolved;\n  }\n\n  _cacheResolvedContext({key, resolved, tag}) {\n    this.perOpCache.set(key, resolved);\n    if(tag !== undefined) {\n      let tagMap = this.sharedCache.get(key);\n      if(!tagMap) {\n        tagMap = new Map();\n        this.sharedCache.set(key, tagMap);\n      }\n      tagMap.set(tag, resolved);\n    }\n    return resolved;\n  }\n\n  async _resolveRemoteContext({activeCtx, url, documentLoader, base, cycles}) {\n    // resolve relative URL and fetch context\n    url = prependBase(base, url);\n    const {context, remoteDoc} = await this._fetchContext(\n      {activeCtx, url, documentLoader, cycles});\n\n    // update base according to remote document and resolve any relative URLs\n    base = remoteDoc.documentUrl || url;\n    _resolveContextUrls({context, base});\n\n    // resolve, cache, and return context\n    const resolved = await this.resolve(\n      {activeCtx, context, documentLoader, base, cycles});\n    this._cacheResolvedContext({key: url, resolved, tag: remoteDoc.tag});\n    return resolved;\n  }\n\n  async _fetchContext({activeCtx, url, documentLoader, cycles}) {\n    // check for max context URLs fetched during a resolve operation\n    if(cycles.size > MAX_CONTEXT_URLS) {\n      throw new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'loading remote context failed' :\n            'context overflow',\n          max: MAX_CONTEXT_URLS\n        });\n    }\n\n    // check for context URL cycle\n    // shortcut to avoid extra work that would eventually hit the max above\n    if(cycles.has(url)) {\n      throw new JsonLdError(\n        'Cyclical @context URLs detected.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'recursive context inclusion' :\n            'context overflow',\n          url\n        });\n    }\n\n    // track cycles\n    cycles.add(url);\n\n    let context;\n    let remoteDoc;\n\n    try {\n      remoteDoc = await documentLoader(url);\n      context = remoteDoc.document || null;\n      // parse string context as JSON\n      if(_isString(context)) {\n        context = JSON.parse(context);\n      }\n    } catch(e) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n        'Possible causes are an inaccessible URL perhaps due to ' +\n        'a same-origin policy (ensure the server uses CORS if you are ' +\n        'using client-side JavaScript), too many redirects, a ' +\n        'non-JSON response, or more than one HTTP Link Header was ' +\n        'provided for a remote context.',\n        'jsonld.InvalidUrl',\n        {code: 'loading remote context failed', url, cause: e});\n    }\n\n    // ensure ctx is an object\n    if(!_isObject(context)) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a JSON object. The ' +\n        'response was valid JSON, but it was not a JSON object.',\n        'jsonld.InvalidUrl', {code: 'invalid remote context', url});\n    }\n\n    // use empty context if no @context key is present\n    if(!('@context' in context)) {\n      context = {'@context': {}};\n    } else {\n      context = {'@context': context['@context']};\n    }\n\n    // append @context URL to context if given\n    if(remoteDoc.contextUrl) {\n      if(!_isArray(context['@context'])) {\n        context['@context'] = [context['@context']];\n      }\n      context['@context'].push(remoteDoc.contextUrl);\n    }\n\n    return {context, remoteDoc};\n  }\n};\n\nfunction _throwInvalidLocalContext(ctx) {\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; @context must be an object.',\n    'jsonld.SyntaxError', {\n      code: 'invalid local context', context: ctx\n    });\n}\n\n/**\n * Resolve all relative `@context` URLs in the given context by inline\n * replacing them with absolute URLs.\n *\n * @param context the context.\n * @param base the base IRI to use to resolve relative IRIs.\n */\nfunction _resolveContextUrls({context, base}) {\n  if(!context) {\n    return;\n  }\n\n  const ctx = context['@context'];\n\n  if(_isString(ctx)) {\n    context['@context'] = prependBase(base, ctx);\n    return;\n  }\n\n  if(_isArray(ctx)) {\n    for(let i = 0; i < ctx.length; ++i) {\n      const element = ctx[i];\n      if(_isString(element)) {\n        ctx[i] = prependBase(base, element);\n        continue;\n      }\n      if(_isObject(element)) {\n        _resolveContextUrls({context: {'@context': element}, base});\n      }\n    }\n    return;\n  }\n\n  if(!_isObject(ctx)) {\n    // no @context URLs can be found in non-object\n    return;\n  }\n\n  // ctx is an object, resolve any context URLs in terms\n  for(const term in ctx) {\n    _resolveContextUrls({context: ctx[term], base});\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class JsonLdError extends Error {\n  /**\n   * Creates a JSON-LD Error.\n   *\n   * @param msg the error message.\n   * @param type the error type.\n   * @param details the error details.\n   */\n  constructor(\n    message = 'An unspecified JSON-LD error occurred.',\n    name = 'jsonld.Error',\n    details = {}) {\n    super(message);\n    this.name = name;\n    this.message = message;\n    this.details = details;\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = jsonld => {\n  class JsonLdProcessor {\n    toString() {\n      return '[object JsonLdProcessor]';\n    }\n  }\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      return Promise.reject(\n        new TypeError('Could not compact, too few arguments.'));\n    }\n    return jsonld.compact(input, ctx);\n  };\n  JsonLdProcessor.expand = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not expand, too few arguments.'));\n    }\n    return jsonld.expand(input);\n  };\n  JsonLdProcessor.flatten = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not flatten, too few arguments.'));\n    }\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: move `NQuads` to its own package\nmodule.exports = require('rdf-canonize').NQuads;\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = loader;\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    let promise = this._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = this._requests[url] = this._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete this._requests[url];\n    }\n  }\n};\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst LRU = require('lru-cache');\n\nconst MAX_ACTIVE_CONTEXTS = 10;\n\nmodule.exports = class ResolvedContext {\n  /**\n   * Creates a ResolvedContext.\n   *\n   * @param document the context document.\n   */\n  constructor({document}) {\n    this.document = document;\n    // TODO: enable customization of processed context cache\n    // TODO: limit based on size of processed contexts vs. number of them\n    this.cache = new LRU({max: MAX_ACTIVE_CONTEXTS});\n  }\n\n  getProcessed(activeCtx) {\n    return this.cache.get(activeCtx);\n  }\n\n  setProcessed(activeCtx, processedCtx) {\n    this.cache.set(activeCtx, processedCtx);\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSimpleGraph: _isSimpleGraph,\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  removeBase: _removeBase,\n  prependBase: _prependBase\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n * @param compactionMap the compaction map to use.\n *\n * @return a promise that resolves to the compacted value.\n */\napi.compact = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  compactionMap = () => undefined\n}) => {\n  // recursively compact array\n  if(_isArray(element)) {\n    let rval = [];\n    for(let i = 0; i < element.length; ++i) {\n      // compact, dropping any null values unless custom mapped\n      let compacted = await api.compact({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        compactionMap\n      });\n      if(compacted === null) {\n        compacted = await compactionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options\n        });\n        if(compacted === undefined) {\n          continue;\n        }\n      }\n      rval.push(compacted);\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.length === 0) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // use any scoped context on activeProperty\n  const ctx = _getContextValue(activeCtx, activeProperty, '@context');\n  if(!_isUndefined(ctx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: ctx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element &&\n      options.link.hasOwnProperty(element['@id'])) {\n      // check for a linked element to reuse\n      const linked = options.link[element['@id']];\n      for(let i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      const rval =\n        api.compactValue({activeCtx, activeProperty, value: element, options});\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(options.link.hasOwnProperty(element['@id']))) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // if expanded property is @list and we're contained within a list\n    // container, recursively compact this item to an array\n    if(_isList(element)) {\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.includes('@list')) {\n        return api.compact({\n          activeCtx,\n          activeProperty,\n          element: element['@list'],\n          options,\n          compactionMap\n        });\n      }\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    const insideReverse = (activeProperty === '@reverse');\n\n    const rval = {};\n\n    // original context before applying property-scoped and local contexts\n    const inputCtx = activeCtx;\n\n    // revert to previous context, if there is one,\n    // and element is not a value object or a node reference\n    if(!_isValue(element) && !_isSubjectReference(element)) {\n      activeCtx = activeCtx.revertToPreviousContext();\n    }\n\n    // apply property-scoped context after reverting term-scoped context\n    const propertyScopedCtx =\n      _getContextValue(inputCtx, activeProperty, '@context');\n    if(!_isUndefined(propertyScopedCtx)) {\n      activeCtx = await _processContext({\n        activeCtx,\n        localCtx: propertyScopedCtx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!options.link.hasOwnProperty(element['@id'])) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // apply any context defined on an alias of @type\n    // if key is @type and any compacted value is a term having a local\n    // context, overlay that context\n    let types = element['@type'] || [];\n    if(types.length > 1) {\n      types = Array.from(types).sort();\n    }\n    // find all type-scoped contexts based on current context, prior to\n    // updating it\n    const typeContext = activeCtx;\n    for(const type of types) {\n      const compactedType = api.compactIri(\n        {activeCtx: typeContext, iri: type, relativeTo: {vocab: true}});\n\n      // Use any type-scoped context defined on this value\n      const ctx = _getContextValue(inputCtx, compactedType, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          options,\n          propagate: false\n        });\n      }\n    }\n\n    // process element keys in order\n    const keys = Object.keys(element).sort();\n    for(const expandedProperty of keys) {\n      const expandedValue = element[expandedProperty];\n\n      // compact @id\n      if(expandedProperty === '@id') {\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: false},\n            base: options.base\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@id', relativeTo: {vocab: true}});\n\n        rval[alias] = compactedValue;\n        continue;\n      }\n\n      // compact @type(s)\n      if(expandedProperty === '@type') {\n        // resolve type values against previous context\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx: inputCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: true}\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@type', relativeTo: {vocab: true}});\n        const container = _getContextValue(\n          activeCtx, alias, '@container') || [];\n\n        // treat as array for @type if @container includes @set\n        const typeAsSet =\n          container.includes('@set') &&\n          _processingMode(activeCtx, 1.1);\n        const isArray =\n          typeAsSet || (_isArray(compactedValue) && expandedValue.length === 0);\n        _addValue(rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty: '@reverse',\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        // handle double-reversed properties\n        for(const compactedProperty in compactedValue) {\n          if(activeCtx.mappings.has(compactedProperty) &&\n            activeCtx.mappings.get(compactedProperty).reverse) {\n            const value = compactedValue[compactedProperty];\n            const container = _getContextValue(\n              activeCtx, compactedProperty, '@container') || [];\n            const useArray = (\n              container.includes('@set') || !options.compactArrays);\n            _addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          const alias = api.compactIri({\n            activeCtx,\n            iri: expandedProperty,\n            relativeTo: {vocab: true}\n          });\n          _addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      if(expandedProperty === '@preserve') {\n        // compact using activeProperty\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty,\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        if(!(_isArray(compactedValue) && compactedValue.length === 0)) {\n          _addValue(rval, expandedProperty, compactedValue);\n        }\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        const container = _getContextValue(\n          activeCtx, activeProperty, '@container') || [];\n        if(container.includes('@index')) {\n          continue;\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't\n      // @graph, @list, or @included\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        expandedProperty !== '@included' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n      if(!_isArray(expandedValue)) {\n        throw new JsonLdError(\n          'JSON-LD expansion error; expanded value must be an array.',\n          'jsonld.SyntaxError');\n      }\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedValue,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n        _addValue(\n          nestResult, itemActiveProperty, expandedValue, {\n            propertyIsArray: true\n          });\n      }\n\n      // recusively process array values\n      for(const expandedItem of expandedValue) {\n        // compact property and get container type\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedItem,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n\n        // if itemActiveProperty is a @nest property, add values to nestResult,\n        // otherwise rval\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n\n        const container = _getContextValue(\n          activeCtx, itemActiveProperty, '@container') || [];\n\n        // get simple @graph or @list value if appropriate\n        const isGraph = _isGraph(expandedItem);\n        const isList = _isList(expandedItem);\n        let inner;\n        if(isList) {\n          inner = expandedItem['@list'];\n        } else if(isGraph) {\n          inner = expandedItem['@graph'];\n        }\n\n        // recursively compact expanded item\n        let compactedItem = await api.compact({\n          activeCtx,\n          activeProperty: itemActiveProperty,\n          element: (isList || isGraph) ? inner : expandedItem,\n          options,\n          compactionMap\n        });\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(!container.includes('@list')) {\n            // wrap using @list alias\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@list',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n          } else {\n            _addValue(nestResult, itemActiveProperty, compactedItem, {\n              valueIsArray: true,\n              allowDuplicate: true\n            });\n            continue;\n          }\n        }\n\n        // Graph object compaction cases\n        if(isGraph) {\n          if(container.includes('@graph') && (container.includes('@id') ||\n            container.includes('@index') && _isSimpleGraph(expandedItem))) {\n            // get or create the map object\n            let mapObject;\n            if(nestResult.hasOwnProperty(itemActiveProperty)) {\n              mapObject = nestResult[itemActiveProperty];\n            } else {\n              nestResult[itemActiveProperty] = mapObject = {};\n            }\n\n            // index on @id or @index or alias of @none\n            const key = (container.includes('@id') ?\n              expandedItem['@id'] : expandedItem['@index']) ||\n              api.compactIri({activeCtx, iri: '@none',\n                relativeTo: {vocab: true}});\n            // add compactedItem to map, using value of `@id` or a new blank\n            // node identifier\n\n            _addValue(\n              mapObject, key, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else if(container.includes('@graph') &&\n            _isSimpleGraph(expandedItem)) {\n            // container includes @graph but not @id or @index and value is a\n            // simple graph object add compact value\n            // if compactedItem contains multiple values, it is wrapped in\n            // `@included`\n            if(_isArray(compactedItem) && compactedItem.length > 1) {\n              compactedItem = {'@included': compactedItem};\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else {\n            // wrap using @graph alias, remove array if only one item and\n            // compactArrays not set\n            if(_isArray(compactedItem) && compactedItem.length === 1 &&\n              options.compactArrays) {\n              compactedItem = compactedItem[0];\n            }\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@graph',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @id from expanded graph, if any\n            if('@id' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@id',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@id'];\n            }\n\n            // include @index from expanded graph, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          }\n        } else if(container.includes('@language') ||\n          container.includes('@index') || container.includes('@id') ||\n          container.includes('@type')) {\n          // handle language and index maps\n          // get or create the map object\n          let mapObject;\n          if(nestResult.hasOwnProperty(itemActiveProperty)) {\n            mapObject = nestResult[itemActiveProperty];\n          } else {\n            nestResult[itemActiveProperty] = mapObject = {};\n          }\n\n          let key;\n          if(container.includes('@language')) {\n          // if container is a language map, simplify compacted value to\n          // a simple string\n            if(_isValue(compactedItem)) {\n              compactedItem = compactedItem['@value'];\n            }\n            key = expandedItem['@language'];\n          } else if(container.includes('@index')) {\n            const indexKey = _getContextValue(\n              activeCtx, itemActiveProperty, '@index') || '@index';\n            const containerKey = api.compactIri(\n              {activeCtx, iri: indexKey, relativeTo: {vocab: true}});\n            if(indexKey === '@index') {\n              key = expandedItem['@index'];\n              delete compactedItem[containerKey];\n            } else {\n              let others;\n              [key, ...others] = _asArray(compactedItem[indexKey] || []);\n              if(!_isString(key)) {\n                // Will use @none if it isn't a string.\n                key = null;\n              } else {\n                switch(others.length) {\n                  case 0:\n                    delete compactedItem[indexKey];\n                    break;\n                  case 1:\n                    compactedItem[indexKey] = others[0];\n                    break;\n                  default:\n                    compactedItem[indexKey] = others;\n                    break;\n                }\n              }\n            }\n          } else if(container.includes('@id')) {\n            const idKey = api.compactIri({activeCtx, iri: '@id',\n              relativeTo: {vocab: true}});\n            key = compactedItem[idKey];\n            delete compactedItem[idKey];\n          } else if(container.includes('@type')) {\n            const typeKey = api.compactIri({\n              activeCtx,\n              iri: '@type',\n              relativeTo: {vocab: true}\n            });\n            let types;\n            [key, ...types] = _asArray(compactedItem[typeKey] || []);\n            switch(types.length) {\n              case 0:\n                delete compactedItem[typeKey];\n                break;\n              case 1:\n                compactedItem[typeKey] = types[0];\n                break;\n              default:\n                compactedItem[typeKey] = types;\n                break;\n            }\n\n            // If compactedItem contains a single entry\n            // whose key maps to @id, recompact without @type\n            if(Object.keys(compactedItem).length === 1 &&\n              '@id' in expandedItem) {\n              compactedItem = await api.compact({\n                activeCtx,\n                activeProperty: itemActiveProperty,\n                element: {'@id': expandedItem['@id']},\n                options,\n                compactionMap\n              });\n            }\n          }\n\n          // if compacting this value which has no key, index on @none\n          if(!key) {\n            key = api.compactIri({activeCtx, iri: '@none',\n              relativeTo: {vocab: true}});\n          }\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          _addValue(\n            mapObject, key, compactedItem, {\n              propertyIsArray: container.includes('@set')\n            });\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          const isArray = (!options.compactArrays ||\n            container.includes('@set') || container.includes('@list') ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          _addValue(\n            nestResult, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n * @param base the absolute URL to use for compacting document-relative IRIs.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\napi.compactIri = ({\n  activeCtx,\n  iri,\n  value = null,\n  relativeTo = {vocab: false},\n  reverse = false,\n  base = null\n}) => {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // if context is from a property term scoped context composed with a\n  // type-scoped context, then use the previous context instead\n  if(activeCtx.isPropertyTermScoped && activeCtx.previousContext) {\n    activeCtx = activeCtx.previousContext;\n  }\n\n  const inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it may be compacted to a simple alias\n  if(_isKeyword(iri) &&\n    iri in inverseCtx &&\n    '@none' in inverseCtx[iri] &&\n    '@type' in inverseCtx[iri]['@none'] &&\n    '@none' in inverseCtx[iri]['@none']['@type']) {\n    return inverseCtx[iri]['@none']['@type']['@none'];\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    const defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    const containers = [];\n    if(_isObject(value) && '@index' in value && !('@graph' in value)) {\n      containers.push('@index', '@index@set');\n    }\n\n    // if value is a preserve object, use its value\n    if(_isObject(value) && '@preserve' in value) {\n      value = value['@preserve'][0];\n    }\n\n    // prefer most specific container including @graph, prefering @set\n    // variations\n    if(_isGraph(value)) {\n      // favor indexmap if the graph is indexed\n      if('@index' in value) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // favor idmap if the graph is has an @id\n      if('@id' in value) {\n        containers.push(\n          '@graph@id', '@graph@id@set');\n      }\n      containers.push('@graph', '@graph@set', '@set');\n      // allow indexmap if the graph is not indexed\n      if(!('@index' in value)) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // allow idmap if the graph does not have an @id\n      if(!('@id' in value)) {\n        containers.push('@graph@id', '@graph@id@set');\n      }\n    } else if(_isObject(value) && !_isValue(value)) {\n      containers.push('@id', '@id@set', '@type', '@set@type');\n    }\n\n    // defaults for term selection based on type/language\n    let typeOrLanguage = '@language';\n    let typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      const list = value['@list'];\n      if(list.length === 0) {\n        // any empty list can be matched against any term that uses the\n        // @list container regardless of @type or @language\n        typeOrLanguage = '@any';\n        typeOrLanguageValue = '@none';\n      } else {\n        let commonLanguage = (list.length === 0) ? defaultLanguage : null;\n        let commonType = null;\n        for(let i = 0; i < list.length; ++i) {\n          const item = list[i];\n          let itemLanguage = '@none';\n          let itemType = '@none';\n          if(_isValue(item)) {\n            if('@direction' in item) {\n              const lang = (item['@language'] || '').toLowerCase();\n              const dir = item['@direction'];\n              itemLanguage = `${lang}_${dir}`;\n            } else if('@language' in item) {\n              itemLanguage = item['@language'].toLowerCase();\n            } else if('@type' in item) {\n              itemType = item['@type'];\n            } else {\n              // plain literal\n              itemLanguage = '@null';\n            }\n          } else {\n            itemType = '@id';\n          }\n          if(commonLanguage === null) {\n            commonLanguage = itemLanguage;\n          } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n            commonLanguage = '@none';\n          }\n          if(commonType === null) {\n            commonType = itemType;\n          } else if(itemType !== commonType) {\n            commonType = '@none';\n          }\n          // there are different languages and types in the list, so choose\n          // the most generic term, no need to keep iterating the list\n          if(commonLanguage === '@none' && commonType === '@none') {\n            break;\n          }\n        }\n        commonLanguage = commonLanguage || '@none';\n        commonType = commonType || '@none';\n        if(commonType !== '@none') {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = commonType;\n        } else {\n          typeOrLanguageValue = commonLanguage;\n        }\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language', '@language@set');\n          typeOrLanguageValue = value['@language'];\n          const dir = value['@direction'];\n          if(dir) {\n            typeOrLanguageValue = `${typeOrLanguageValue}_${dir}`;\n          }\n        } else if('@direction' in value && !('@index' in value)) {\n          typeOrLanguageValue = `_${value['@direction']}`;\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n\n    // an index map can be used to index values using @none, so add as a low\n    // priority\n    if(_isObject(value) && !('@index' in value)) {\n      // allow indexing even if no @index present\n      containers.push('@index', '@index@set');\n    }\n\n    // values without type or language can use @language map\n    if(_isValue(value) && Object.keys(value).length === 1) {\n      // allow indexing even if no @index present\n      containers.push('@language', '@language@set');\n    }\n\n    const term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      const vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        const suffix = iri.substr(vocab.length);\n        if(!activeCtx.mappings.has(suffix)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  let choice = null;\n  // TODO: make FastCurieMap a class with a method to do this lookup\n  const partialMatches = [];\n  let iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  const maxPartialLength = iri.length - 1;\n  for(let i = 0; i < maxPartialLength && iri[i] in iriMap; ++i) {\n    iriMap = iriMap[iri[i]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(let i = partialMatches.length - 1; i >= 0; --i) {\n    const entry = partialMatches[i];\n    const terms = entry.terms;\n    for(const term of terms) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      const curie = term + ':' + iri.substr(entry.iri.length);\n      const isUsableCurie = (activeCtx.mappings.get(term)._prefix &&\n        (!activeCtx.mappings.has(curie) ||\n        (value === null && activeCtx.mappings.get(curie)['@id'] === iri)));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // If iri could be confused with a compact IRI using a term in this context,\n  // signal an error\n  for(const [term, td] of activeCtx.mappings) {\n    if(td && td._prefix && iri.startsWith(term + ':')) {\n      throw new JsonLdError(\n        `Absolute IRI \"${iri}\" confused with prefix \"${term}\".`,\n        'jsonld.SyntaxError',\n        {code: 'IRI confused with prefix', context: activeCtx});\n    }\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    if('@base' in activeCtx) {\n      if(!activeCtx['@base']) {\n        // The None case preserves rval as potentially relative\n        return iri;\n      } else {\n        return _removeBase(_prependBase(base, activeCtx['@base']), iri);\n      }\n    } else {\n      return _removeBase(base, iri);\n    }\n  }\n\n  // return IRI as is\n  return iri;\n};\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n * @param {Object} [options] - processing options.\n *\n * @return the compaction result.\n */\napi.compactValue = ({activeCtx, activeProperty, value, options}) => {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    const type = _getContextValue(activeCtx, activeProperty, '@type');\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    const container =\n      _getContextValue(activeCtx, activeProperty, '@container') || [];\n\n    // whether or not the value has an @index that must be preserved\n    const preserveIndex = '@index' in value && !container.includes('@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex && type !== '@none') {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language &&\n         '@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language) {\n        return value['@value'];\n      }\n      if('@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    const keyCount = Object.keys(value).length;\n    const isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && '@index' in value && !preserveIndex));\n    const hasDefaultLanguage = ('@language' in activeCtx);\n    const isValueString = _isString(value['@value']);\n    const hasNullMapping = (activeCtx.mappings.has(activeProperty) &&\n      activeCtx.mappings.get(activeProperty)['@language'] === null);\n    if(isValueOnlyKey &&\n      type !== '@none' &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    const rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@index',\n        relativeTo: {vocab: true}\n      })] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@type',\n        relativeTo: {vocab: true}\n      })] = api.compactIri(\n        {activeCtx, iri: value['@type'], relativeTo: {vocab: true}});\n    } else if('@language' in value) {\n      // alias @language\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@language',\n        relativeTo: {vocab: true}\n      })] = value['@language'];\n    }\n\n    if('@direction' in value) {\n      // alias @direction\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@direction',\n        relativeTo: {vocab: true}\n      })] = value['@direction'];\n    }\n\n    // alias @value\n    rval[api.compactIri({\n      activeCtx,\n      iri: '@value',\n      relativeTo: {vocab: true}\n    })] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  const expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true},\n    options);\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n  const compacted = api.compactIri({\n    activeCtx,\n    iri: value['@id'],\n    relativeTo: {vocab: type === '@vocab'},\n    base: options.base});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  return {\n    [api.compactIri({\n      activeCtx,\n      iri: '@id',\n      relativeTo: {vocab: true}\n    })]: compacted\n  };\n};\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  const prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isObject(value) && '@id' in value) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    const term = api.compactIri(\n      {activeCtx, iri: value['@id'], relativeTo: {vocab: true}});\n    if(activeCtx.mappings.has(term) &&\n      activeCtx.mappings.get(term) &&\n      activeCtx.mappings.get(term)['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n\n    // consider direction only\n    const langDir = prefs.find(el => el.includes('_'));\n    if(langDir) {\n      // consider _dir portion\n      prefs.push(langDir.replace(/^[^_]+_/, '_'));\n    }\n  }\n  prefs.push('@none');\n\n  const containerMap = activeCtx.inverse[iri];\n  for(const container of containers) {\n    // if container not available in the map, continue\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    const typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(const pref of prefs) {\n      // if type/language option not available in the map, continue\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * The value of `@nest` in the term definition must either be `@nest`, or a term\n * which resolves to `@nest`.\n *\n * @param activeCtx the active context.\n * @param nestProperty a term in the active context or `@nest`.\n * @param {Object} [options] - processing options.\n */\nfunction _checkNestProperty(activeCtx, nestProperty, options) {\n  if(_expandIri(activeCtx, nestProperty, {vocab: true}, options) !== '@nest') {\n    throw new JsonLdError(\n      'JSON-LD compact error; nested property must have an @nest value ' +\n      'resolving to @nest.',\n      'jsonld.SyntaxError', {code: 'invalid @nest value'});\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst XSD = 'http://www.w3.org/2001/XMLSchema#';\n\nmodule.exports = {\n  // TODO: Deprecated and will be removed later. Use LINK_HEADER_CONTEXT.\n  LINK_HEADER_REL: 'http://www.w3.org/ns/json-ld#context',\n\n  LINK_HEADER_CONTEXT: 'http://www.w3.org/ns/json-ld#context',\n\n  RDF,\n  RDF_LIST: RDF + 'List',\n  RDF_FIRST: RDF + 'first',\n  RDF_REST: RDF + 'rest',\n  RDF_NIL: RDF + 'nil',\n  RDF_TYPE: RDF + 'type',\n  RDF_PLAIN_LITERAL: RDF + 'PlainLiteral',\n  RDF_XML_LITERAL: RDF + 'XMLLiteral',\n  RDF_JSON_LITERAL: RDF + 'JSON',\n  RDF_OBJECT: RDF + 'object',\n  RDF_LANGSTRING: RDF + 'langString',\n\n  XSD,\n  XSD_BOOLEAN: XSD + 'boolean',\n  XSD_DOUBLE: XSD + 'double',\n  XSD_INTEGER: XSD + 'integer',\n  XSD_STRING: XSD + 'string',\n};\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isAbsolute: _isAbsoluteIri,\n  isRelative: _isRelativeIri,\n  prependBase\n} = require('./url');\n\nconst {\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst INITIAL_CONTEXT_CACHE = new Map();\nconst INITIAL_CONTEXT_CACHE_MAX_SIZE = 10000;\nconst KEYWORD_PATTERN = /^@[a-zA-Z]+$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n * @param propagate `true` if `false`, retains any previously defined term,\n *   which can be rolled back when the descending into a new node object.\n * @param overrideProtected `false` allows protected terms to be modified.\n *\n * @return a Promise that resolves to the new active context.\n */\napi.process = async ({\n  activeCtx, localCtx, options,\n  propagate = true,\n  overrideProtected = false,\n  cycles = new Set()\n}) => {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  const ctxs = _asArray(localCtx);\n\n  // no contexts in array, return current active context w/o changes\n  if(ctxs.length === 0) {\n    return activeCtx;\n  }\n\n  // resolve contexts\n  const resolved = await options.contextResolver.resolve({\n    activeCtx,\n    context: localCtx,\n    documentLoader: options.documentLoader,\n    base: options.base\n  });\n\n  // override propagate if first resolved context has `@propagate`\n  if(_isObject(resolved[0].document) &&\n    typeof resolved[0].document['@propagate'] === 'boolean') {\n    // retrieve early, error checking done later\n    propagate = resolved[0].document['@propagate'];\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  let rval = activeCtx;\n\n  // track the previous context\n  // if not propagating, make sure rval has a previous context\n  if(!propagate && !rval.previousContext) {\n    // clone `rval` context before updating\n    rval = rval.clone();\n    rval.previousContext = activeCtx;\n  }\n\n  for(const resolvedContext of resolved) {\n    let {document: ctx} = resolvedContext;\n\n    // update active context to one computed from last iteration\n    activeCtx = rval;\n\n    // reset to initial context\n    if(ctx === null) {\n      // We can't nullify if there are protected terms and we're\n      // not allowing overrides (e.g. processing a property term scoped context)\n      if(!overrideProtected &&\n        Object.keys(activeCtx.protected).length !== 0) {\n        const protectedMode = (options && options.protectedMode) || 'error';\n        if(protectedMode === 'error') {\n          throw new JsonLdError(\n            'Tried to nullify a context with protected terms outside of ' +\n            'a term definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context nullification'});\n        } else if(protectedMode === 'warn') {\n          // FIXME: remove logging and use a handler\n          console.warn('WARNING: invalid context nullification');\n\n          // get processed context from cache if available\n          const processed = resolvedContext.getProcessed(activeCtx);\n          if(processed) {\n            rval = activeCtx = processed;\n            continue;\n          }\n\n          const oldActiveCtx = activeCtx;\n          // copy all protected term definitions to fresh initial context\n          rval = activeCtx = api.getInitialContext(options).clone();\n          for(const [term, _protected] of\n            Object.entries(oldActiveCtx.protected)) {\n            if(_protected) {\n              activeCtx.mappings[term] =\n                util.clone(oldActiveCtx.mappings[term]);\n            }\n          }\n          activeCtx.protected = util.clone(oldActiveCtx.protected);\n\n          // cache processed result\n          resolvedContext.setProcessed(oldActiveCtx, rval);\n          continue;\n        }\n        throw new JsonLdError(\n          'Invalid protectedMode.',\n          'jsonld.SyntaxError',\n          {code: 'invalid protected mode', context: localCtx, protectedMode});\n      }\n      rval = activeCtx = api.getInitialContext(options).clone();\n      continue;\n    }\n\n    // get processed context from cache if available\n    const processed = resolvedContext.getProcessed(activeCtx);\n    if(processed) {\n      rval = activeCtx = processed;\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // TODO: there is likely a `previousContext` cloning optimization that\n    // could be applied here (no need to copy it under certain conditions)\n\n    // clone context before updating it\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    const defined = new Map();\n\n    // handle @version\n    if('@version' in ctx) {\n      if(ctx['@version'] !== 1.1) {\n        throw new JsonLdError(\n          'Unsupported JSON-LD version: ' + ctx['@version'],\n          'jsonld.UnsupportedVersion',\n          {code: 'invalid @version value', context: ctx});\n      }\n      if(activeCtx.processingMode &&\n        activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          '@version: ' + ctx['@version'] + ' not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.ProcessingModeConflict',\n          {code: 'processing mode conflict', context: ctx});\n      }\n      rval.processingMode = 'json-ld-1.1';\n      rval['@version'] = ctx['@version'];\n      defined.set('@version', true);\n    }\n\n    // if not set explicitly, set processingMode to \"json-ld-1.1\"\n    rval.processingMode =\n      rval.processingMode || activeCtx.processingMode;\n\n    // handle @base\n    if('@base' in ctx) {\n      let base = ctx['@base'];\n\n      if(base === null || _isAbsoluteIri(base)) {\n        // no action\n      } else if(_isRelativeIri(base)) {\n        base = prependBase(rval['@base'], base);\n      } else {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI, a relative IRI, or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      rval['@base'] = base;\n      defined.set('@base', true);\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      const value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value) && api.processingMode(rval, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = _expandIri(rval, value, {vocab: true, base: true},\n          undefined, undefined, options);\n      }\n      defined.set('@vocab', true);\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      const value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined.set('@language', true);\n    }\n\n    // handle @direction\n    if('@direction' in ctx) {\n      const value = ctx['@direction'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @direction not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context member', context: ctx});\n      }\n      if(value === null) {\n        delete rval['@direction'];\n      } else if(value !== 'ltr' && value !== 'rtl') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@direction\" in a ' +\n          '@context must be null, \"ltr\", or \"rtl\".',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', context: ctx});\n      } else {\n        rval['@direction'] = value;\n      }\n      defined.set('@direction', true);\n    }\n\n    // handle @propagate\n    // note: we've already extracted it, here we just do error checking\n    if('@propagate' in ctx) {\n      const value = ctx['@propagate'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(typeof value !== 'boolean') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate value must be a boolean.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @propagate value', context: localCtx});\n      }\n      defined.set('@propagate', true);\n    }\n\n    // handle @import\n    if('@import' in ctx) {\n      const value = ctx['@import'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @import value', context: localCtx});\n      }\n\n      // resolve contexts\n      const resolvedImport = await options.contextResolver.resolve({\n        activeCtx,\n        context: value,\n        documentLoader: options.documentLoader,\n        base: options.base\n      });\n      if(resolvedImport.length !== 1) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must reference a single context.',\n          'jsonld.SyntaxError',\n          {code: 'invalid remote context', context: localCtx});\n      }\n      const processedImport = resolvedImport[0].getProcessed(activeCtx);\n      if(processedImport) {\n        // Note: if the same context were used in this active context\n        // as a reference context, then processed_input might not\n        // be a dict.\n        ctx = processedImport;\n      } else {\n        const importCtx = resolvedImport[0].document;\n        if('@import' in importCtx) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax: ' +\n            'imported context must not include @import.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context entry', context: localCtx});\n        }\n\n        // merge ctx into importCtx and replace rval with the result\n        for(const key in importCtx) {\n          if(!ctx.hasOwnProperty(key)) {\n            ctx[key] = importCtx[key];\n          }\n        }\n\n        // Note: this could potenially conflict if the import\n        // were used in the same active context as a referenced\n        // context and an import. In this case, we\n        // could override the cached result, but seems unlikely.\n        resolvedImport[0].setProcessed(activeCtx, ctx);\n      }\n\n      defined.set('@import', true);\n    }\n\n    // handle @protected; determine whether this sub-context is declaring\n    // all its terms to be \"protected\" (exceptions can be made on a\n    // per-definition basis)\n    defined.set('@protected', ctx['@protected'] || false);\n\n    // process all other keys\n    for(const key in ctx) {\n      api.createTermDefinition({\n        activeCtx: rval,\n        localCtx: ctx,\n        term: key,\n        defined,\n        options,\n        overrideProtected\n      });\n\n      if(_isObject(ctx[key]) && '@context' in ctx[key]) {\n        const keyCtx = ctx[key]['@context'];\n        let process = true;\n        if(_isString(keyCtx)) {\n          const url = prependBase(options.base, keyCtx);\n          // track processed contexts to avoid scoped context recursion\n          if(cycles.has(url)) {\n            process = false;\n          } else {\n            cycles.add(url);\n          }\n        }\n        // parse context to validate\n        if(process) {\n          try {\n            await api.process({\n              activeCtx: rval.clone(),\n              localCtx: ctx[key]['@context'],\n              overrideProtected: true,\n              options,\n              cycles\n            });\n          } catch(e) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; invalid scoped context.',\n              'jsonld.SyntaxError',\n              {\n                code: 'invalid scoped context',\n                context: ctx[key]['@context'],\n                term: key\n              });\n          }\n        }\n      }\n    }\n\n    // cache processed result\n    resolvedContext.setProcessed(activeCtx, rval);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n * @param {Object} [options] - creation options.\n * @param {string} [options.protectedMode=\"error\"] - \"error\" to throw error\n *   on `@protected` constraint violation, \"warn\" to allow violations and\n *   signal a warning.\n * @param overrideProtected `false` allows protected terms to be modified.\n */\napi.createTermDefinition = ({\n  activeCtx,\n  localCtx,\n  term,\n  defined,\n  options,\n  overrideProtected = false,\n}) => {\n  if(defined.has(term)) {\n    // term already defined\n    if(defined.get(term)) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term});\n  }\n\n  // now defining term\n  defined.set(term, false);\n\n  // get context term value\n  let value;\n  if(localCtx.hasOwnProperty(term)) {\n    value = localCtx[term];\n  }\n\n  if(term === '@type' &&\n     _isObject(value) &&\n     (value['@container'] || '@set') === '@set' &&\n     api.processingMode(activeCtx, 1.1)) {\n\n    const validKeys = ['@container', '@id', '@protected'];\n    const keys = Object.keys(value);\n    if(keys.length === 0 || keys.some(k => !validKeys.includes(k))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords cannot be overridden.',\n        'jsonld.SyntaxError',\n        {code: 'keyword redefinition', context: localCtx, term});\n    }\n  } else if(api.isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term});\n  } else if(term.match(KEYWORD_PATTERN)) {\n    // FIXME: remove logging and use a handler\n    console.warn('WARNING: terms beginning with \"@\" are reserved' +\n      ' for future use and ignored', {term});\n    return;\n  } else if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // keep reference to previous mapping for potential `@protected` check\n  const previousMapping = activeCtx.mappings.get(term);\n\n  // remove old mapping\n  if(activeCtx.mappings.has(term)) {\n    activeCtx.mappings.delete(term);\n  }\n\n  // convert short-hand value to object w/@id\n  let simpleTerm = false;\n  if(_isString(value) || value === null) {\n    simpleTerm = true;\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context term values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  const mapping = {};\n  activeCtx.mappings.set(term, mapping);\n  mapping.reverse = false;\n\n  // make sure term definition only has expected keywords\n  const validKeys = ['@container', '@id', '@language', '@reverse', '@type'];\n\n  // JSON-LD 1.1 support\n  if(api.processingMode(activeCtx, 1.1)) {\n    validKeys.push(\n      '@context', '@direction', '@index', '@nest', '@prefix', '@protected');\n  }\n\n  for(const kw in value) {\n    if(!validKeys.includes(kw)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a term definition must not contain ' + kw,\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  const colon = term.indexOf(':');\n  mapping._termHasColon = (colon > 0);\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    if('@nest' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @nest.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    const reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    if(!api.isKeyword(reverse) && reverse.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {reverse});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    }\n\n    // expand and add @id mapping\n    const id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined,\n      options);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    let id = value['@id'];\n    if(id && !_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id === null) {\n      // reserve a null term, which may be protected\n      mapping['@id'] = null;\n    } else if(!api.isKeyword(id) && id.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {id});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    } else if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined, options);\n      if(!_isAbsoluteIri(id) && !api.isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n\n      // if term has the form of an IRI it must map the same\n      if(term.match(/(?::[^:])|\\//)) {\n        const termDefined = new Map(defined).set(term, true);\n        const termIri = _expandIri(\n          activeCtx, term, {vocab: true, base: false},\n          localCtx, termDefined, options);\n        if(termIri !== id) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; term in form of IRI must ' +\n            'expand to definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid IRI mapping', context: localCtx});\n        }\n      }\n\n      mapping['@id'] = id;\n      // indicate if this term may be used as a compact IRI prefix\n      mapping._prefix = (simpleTerm &&\n        !mapping._termHasColon &&\n        id.match(/[:\\/\\?#\\[\\]@]$/));\n    }\n  }\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      const prefix = term.substr(0, colon);\n      if(localCtx.hasOwnProperty(prefix)) {\n        // define parent prefix\n        api.createTermDefinition({\n          activeCtx, localCtx, term: prefix, defined, options\n        });\n      }\n\n      if(activeCtx.mappings.has(prefix)) {\n        // set @id based on prefix parent\n        const suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings.get(prefix)['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else if(term === '@type') {\n      // Special case, were we've previously determined that container is @set\n      mapping['@id'] = term;\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // Handle term protection\n  if(value['@protected'] === true ||\n    (defined.get('@protected') === true && value['@protected'] !== false)) {\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n  }\n\n  // IRI mapping now defined\n  defined.set(term, true);\n\n  if('@type' in value) {\n    let type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type value must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if((type === '@json' || type === '@none')) {\n      if(api.processingMode(activeCtx, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must not be ' +\n          `\"${type}\" in JSON-LD 1.0 mode.`,\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    } else if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined,\n        options);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    // normalize container to an array form\n    const container = _isString(value['@container']) ?\n      [value['@container']] : (value['@container'] || []);\n    const validContainers = ['@list', '@set', '@index', '@language'];\n    let isValid = true;\n    const hasSet = container.includes('@set');\n\n    // JSON-LD 1.1 support\n    if(api.processingMode(activeCtx, 1.1)) {\n      validContainers.push('@graph', '@id', '@type');\n\n      // check container length\n      if(container.includes('@list')) {\n        if(container.length !== 1) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @list must ' +\n            'have no other values',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else if(container.includes('@graph')) {\n        if(container.some(key =>\n          key !== '@graph' && key !== '@id' && key !== '@index' &&\n          key !== '@set')) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @graph must ' +\n            'have no other values other than @id, @index, and @set',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else {\n        // otherwise, container may also include @set\n        isValid &= container.length <= (hasSet ? 2 : 1);\n      }\n\n      if(container.includes('@type')) {\n        // If mapping does not have an @type,\n        // set it to @id\n        mapping['@type'] = mapping['@type'] || '@id';\n\n        // type mapping must be either @id or @vocab\n        if(!['@id', '@vocab'].includes(mapping['@type'])) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; container: @type requires @type to be ' +\n            '@id or @vocab.',\n            'jsonld.SyntaxError',\n            {code: 'invalid type mapping', context: localCtx});\n        }\n      }\n    } else {\n      // in JSON-LD 1.0, container must not be an array (it must be a string,\n      // which is one of the validContainers)\n      isValid &= !_isArray(value['@container']);\n\n      // check container length\n      isValid &= container.length <= 1;\n    }\n\n    // check against valid containers\n    isValid &= container.every(c => validContainers.includes(c));\n\n    // @set not allowed with @list\n    isValid &= !(hasSet && container.includes('@list'));\n\n    if(!isValid) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: ' + validContainers.join(', '),\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n\n    if(mapping.reverse &&\n      !container.every(c => ['@index', '@set'].includes(c))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  // property indexing\n  if('@index' in value) {\n    if(!('@container' in value) || !mapping['@container'].includes('@index')) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index without @index in @container: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(!_isString(value['@index']) || value['@index'].indexOf('@') === 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index must expand to an IRI: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    mapping['@index'] = value['@index'];\n  }\n\n  // scoped contexts\n  if('@context' in value) {\n    mapping['@context'] = value['@context'];\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    let language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // term may be used as a prefix\n  if('@prefix' in value) {\n    if(term.match(/:|\\//)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @prefix used on a compact IRI term',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(api.isKeyword(mapping['@id'])) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords may not be used as prefixes',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(typeof value['@prefix'] === 'boolean') {\n      mapping._prefix = value['@prefix'] === true;\n    } else {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context value for @prefix must be boolean',\n        'jsonld.SyntaxError',\n        {code: 'invalid @prefix value', context: localCtx});\n    }\n  }\n\n  if('@direction' in value) {\n    const direction = value['@direction'];\n    if(direction !== null && direction !== 'ltr' && direction !== 'rtl') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @direction value must be ' +\n        'null, \"ltr\", or \"rtl\".',\n        'jsonld.SyntaxError',\n        {code: 'invalid base direction', context: localCtx});\n    }\n    mapping['@direction'] = direction;\n  }\n\n  if('@nest' in value) {\n    const nest = value['@nest'];\n    if(!_isString(nest) || (nest !== '@nest' && nest.indexOf('@') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @nest value must be ' +\n        'a string which is not a keyword other than @nest.',\n        'jsonld.SyntaxError',\n        {code: 'invalid @nest value', context: localCtx});\n    }\n    mapping['@nest'] = nest;\n  }\n\n  // disallow aliasing @context and @preserve\n  const id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n\n  // Check for overriding protected terms\n  if(previousMapping && previousMapping.protected && !overrideProtected) {\n    // force new term to continue to be protected and see if the mappings would\n    // be equal\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n    if(!_deepCompare(previousMapping, mapping)) {\n      const protectedMode = (options && options.protectedMode) || 'error';\n      if(protectedMode === 'error') {\n        throw new JsonLdError(\n          `Invalid JSON-LD syntax; tried to redefine \"${term}\" which is a ` +\n          'protected term.',\n          'jsonld.SyntaxError',\n          {code: 'protected term redefinition', context: localCtx, term});\n      } else if(protectedMode === 'warn') {\n        // FIXME: remove logging and use a handler\n        console.warn('WARNING: protected term redefinition', {term});\n        return;\n      }\n      throw new JsonLdError(\n        'Invalid protectedMode.',\n        'jsonld.SyntaxError',\n        {code: 'invalid protected mode', context: localCtx, term,\n          protectedMode});\n    }\n  }\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\napi.expandIri = (activeCtx, value, relativeTo, options) => {\n  return _expandIri(activeCtx, value, relativeTo, undefined, undefined,\n    options);\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined, options) {\n  // already expanded\n  if(value === null || !_isString(value) || api.isKeyword(value)) {\n    return value;\n  }\n\n  // ignore non-keyword things that look like a keyword\n  if(value.match(KEYWORD_PATTERN)) {\n    return null;\n  }\n\n  // define term dependency if not defined\n  if(localCtx && localCtx.hasOwnProperty(value) &&\n    defined.get(value) !== true) {\n    api.createTermDefinition({\n      activeCtx, localCtx, term: value, defined, options\n    });\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    const mapping = activeCtx.mappings.get(value);\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(_isObject(mapping) && '@id' in mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  const colon = value.indexOf(':');\n  if(colon > 0) {\n    const prefix = value.substr(0, colon);\n    const suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && localCtx.hasOwnProperty(prefix)) {\n      api.createTermDefinition({\n        activeCtx, localCtx, term: prefix, defined, options\n      });\n    }\n\n    // use mapping if prefix is defined\n    const mapping = activeCtx.mappings.get(prefix);\n    if(mapping && mapping._prefix) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    if(_isAbsoluteIri(value)) {\n      return value;\n    }\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  if(relativeTo.base && '@base' in activeCtx) {\n    if(activeCtx['@base']) {\n      // The null case preserves value as potentially relative\n      return prependBase(prependBase(options.base, activeCtx['@base']), value);\n    }\n  } else if(relativeTo.base) {\n    return prependBase(options.base, value);\n  }\n\n  return value;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\napi.getInitialContext = options => {\n  const key = JSON.stringify({processingMode: options.processingMode});\n  const cached = INITIAL_CONTEXT_CACHE.get(key);\n  if(cached) {\n    return cached;\n  }\n\n  const initialContext = {\n    processingMode: options.processingMode,\n    mappings: new Map(),\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext,\n    revertToPreviousContext: _revertToPreviousContext,\n    protected: {}\n  };\n  // TODO: consider using LRU cache instead\n  if(INITIAL_CONTEXT_CACHE.size === INITIAL_CONTEXT_CACHE_MAX_SIZE) {\n    // clear whole cache -- assumes scenario where the cache fills means\n    // the cache isn't being used very efficiently anyway\n    INITIAL_CONTEXT_CACHE.clear();\n  }\n  INITIAL_CONTEXT_CACHE.set(key, initialContext);\n  return initialContext;\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    const activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    const inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    const fastCurieMap = activeCtx.fastCurieMap = {};\n    const irisToTerms = {};\n\n    // handle default language\n    const defaultLanguage = (activeCtx['@language'] || '@none').toLowerCase();\n\n    // handle default direction\n    const defaultDirection = activeCtx['@direction'];\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    const mappings = activeCtx.mappings;\n    const terms = [...mappings.keys()].sort(_compareShortestLeast);\n    for(const term of terms) {\n      const mapping = mappings.get(term);\n      if(mapping === null) {\n        continue;\n      }\n\n      let container = mapping['@container'] || '@none';\n      container = [].concat(container).sort().join('');\n\n      if(mapping['@id'] === null) {\n        continue;\n      }\n      // iterate over every IRI in the mapping\n      const ids = _asArray(mapping['@id']);\n      for(const iri of ids) {\n        let entry = inverse[iri];\n        const isKeyword = api.isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            const fastCurieEntry = {iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {},\n            '@any': {}\n          };\n        }\n        entry = entry[container];\n        _addPreferredTerm(term, entry['@any'], '@none');\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(term, entry['@type'], '@reverse');\n        } else if(mapping['@type'] === '@none') {\n          _addPreferredTerm(term, entry['@any'], '@none');\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping && '@direction' in mapping) {\n          // term is preferred for values using specific language and direction\n          const language = mapping['@language'];\n          const direction = mapping['@direction'];\n          if(language && direction) {\n            _addPreferredTerm(term, entry['@language'],\n              `${language}_${direction}`.toLowerCase());\n          } else if(language) {\n            _addPreferredTerm(term, entry['@language'], language.toLowerCase());\n          } else if(direction) {\n            _addPreferredTerm(term, entry['@language'], `_${direction}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@null');\n          }\n        } else if('@language' in mapping) {\n          _addPreferredTerm(term, entry['@language'],\n            (mapping['@language'] || '@null').toLowerCase());\n        } else if('@direction' in mapping) {\n          if(mapping['@direction']) {\n            _addPreferredTerm(term, entry['@language'],\n              `_${mapping['@direction']}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@none');\n          }\n        } else if(defaultDirection) {\n          _addPreferredTerm(term, entry['@language'], `_${defaultDirection}`);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else {\n          // add entries for no type and no language\n          _addPreferredTerm(term, entry['@language'], defaultLanguage);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(const key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    const entries = iriMap[key];\n    const next = iriMap[key] = {};\n\n    let iri;\n    let letter;\n    for(const entry of entries) {\n      iri = entry.iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entry);\n      } else {\n        next[letter] = [entry];\n      }\n    }\n\n    for(const key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(term, entry, typeOrLanguageValue) {\n    if(!entry.hasOwnProperty(typeOrLanguageValue)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    const child = {};\n    child.mappings = util.clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    child.protected = util.clone(this.protected);\n    if(this.previousContext) {\n      child.previousContext = this.previousContext.clone();\n    }\n    child.revertToPreviousContext = this.revertToPreviousContext;\n    if('@base' in this) {\n      child['@base'] = this['@base'];\n    }\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n\n  /**\n   * Reverts any type-scoped context in this active context to the previous\n   * context.\n   */\n  function _revertToPreviousContext() {\n    if(!this.previousContext) {\n      return this;\n    }\n    return this.previousContext.clone();\n  }\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set or undefined if none is set and type is '@context'.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value, null, or undefined.\n */\napi.getContextValue = (ctx, key, type) => {\n  // invalid key\n  if(key === null) {\n    if(type === '@context') {\n      return undefined;\n    }\n    return null;\n  }\n\n  // get specific entry information\n  if(ctx.mappings.has(key)) {\n    const entry = ctx.mappings.get(key);\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      return entry;\n    }\n    if(entry.hasOwnProperty(type)) {\n      // return entry value for type\n      return entry[type];\n    }\n  }\n\n  // get default language\n  if(type === '@language' && type in ctx) {\n    return ctx[type];\n  }\n\n  // get default direction\n  if(type === '@direction' && type in ctx) {\n    return ctx[type];\n  }\n\n  if(type === '@context') {\n    return undefined;\n  }\n  return null;\n};\n\n/**\n * Processing Mode check.\n *\n * @param activeCtx the current active context.\n * @param version the string or numeric version to check.\n *\n * @return boolean.\n */\napi.processingMode = (activeCtx, version) => {\n  if(version.toString() >= '1.1') {\n    return !activeCtx.processingMode ||\n      activeCtx.processingMode >= 'json-ld-' + version.toString();\n  } else {\n    return activeCtx.processingMode === 'json-ld-1.0';\n  }\n};\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\napi.isKeyword = v => {\n  if(!_isString(v) || v[0] !== '@') {\n    return false;\n  }\n  switch(v) {\n    case '@base':\n    case '@container':\n    case '@context':\n    case '@default':\n    case '@direction':\n    case '@embed':\n    case '@explicit':\n    case '@graph':\n    case '@id':\n    case '@included':\n    case '@index':\n    case '@json':\n    case '@language':\n    case '@list':\n    case '@nest':\n    case '@none':\n    case '@omitDefault':\n    case '@prefix':\n    case '@preserve':\n    case '@protected':\n    case '@requireAll':\n    case '@reverse':\n    case '@set':\n    case '@type':\n    case '@value':\n    case '@version':\n    case '@vocab':\n      return true;\n  }\n  return false;\n};\n\nfunction _deepCompare(x1, x2) {\n  // compare `null` or primitive types directly\n  if((!(x1 && typeof x1 === 'object')) ||\n     (!(x2 && typeof x2 === 'object'))) {\n    return x1 === x2;\n  }\n  // x1 and x2 are objects (also potentially arrays)\n  const x1Array = Array.isArray(x1);\n  if(x1Array !== Array.isArray(x2)) {\n    return false;\n  }\n  if(x1Array) {\n    if(x1.length !== x2.length) {\n      return false;\n    }\n    for(let i = 0; i < x1.length; ++i) {\n      if(!_deepCompare(x1[i], x2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // x1 and x2 are non-array objects\n  const k1s = Object.keys(x1);\n  const k2s = Object.keys(x2);\n  if(k1s.length !== k2s.length) {\n    return false;\n  }\n  for(const k1 in x1) {\n    let v1 = x1[k1];\n    let v2 = x2[k1];\n    // special case: `@container` can be in any order\n    if(k1 === '@container') {\n      if(Array.isArray(v1) && Array.isArray(v2)) {\n        v1 = v1.slice().sort();\n        v2 = v2.slice().sort();\n      }\n    }\n    if(!_deepCompare(v1, v2)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {parseLinkHeader, buildHeaders} = require('../util');\nconst {LINK_HEADER_CONTEXT} = require('../constants');\nconst JsonLdError = require('../JsonLdError');\nconst RequestQueue = require('../RequestQueue');\nconst {prependBase} = require('../url');\n\nconst REGEX_LINK_HEADER = /(^|(\\r\\n))link:/i;\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          headers: an object (map) of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\nmodule.exports = ({\n  secure,\n  headers = {},\n  xhr\n} = {headers: {}}) => {\n  headers = buildHeaders(headers);\n  const queue = new RequestQueue();\n  return queue.wrapLoader(loader);\n\n  async function loader(url) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    if(secure && url.indexOf('https') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n\n    let req;\n    try {\n      req = await _get(xhr, url, headers);\n    } catch(e) {\n      throw new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url, cause: e});\n    }\n\n    if(req.status >= 400) {\n      throw new JsonLdError(\n        'URL could not be dereferenced: ' + req.statusText,\n        'jsonld.LoadDocumentError', {\n          code: 'loading document failed',\n          url,\n          httpStatusCode: req.status\n        });\n    }\n\n    let doc = {contextUrl: null, documentUrl: url, document: req.response};\n    let alternate = null;\n\n    // handle Link Header (avoid unsafe header warning by existence testing)\n    const contentType = req.getResponseHeader('Content-Type');\n    let linkHeader;\n    if(REGEX_LINK_HEADER.test(req.getAllResponseHeaders())) {\n      linkHeader = req.getResponseHeader('Link');\n    }\n    if(linkHeader && contentType !== 'application/ld+json') {\n      // only 1 related link header permitted\n      const linkHeaders = parseLinkHeader(linkHeader);\n      const linkedContext = linkHeaders[LINK_HEADER_CONTEXT];\n      if(Array.isArray(linkedContext)) {\n        throw new JsonLdError(\n          'URL could not be dereferenced, it has more than one ' +\n          'associated HTTP Link Header.',\n          'jsonld.InvalidUrl',\n          {code: 'multiple context link headers', url});\n      }\n      if(linkedContext) {\n        doc.contextUrl = linkedContext.target;\n      }\n\n      // \"alternate\" link header is a redirect\n      alternate = linkHeaders['alternate'];\n      if(alternate &&\n        alternate.type == 'application/ld+json' &&\n        !(contentType || '').match(/^application\\/(\\w*\\+)?json$/)) {\n        doc = await loader(prependBase(url, alternate.target));\n      }\n    }\n\n    return doc;\n  }\n};\n\nfunction _get(xhr, url, headers) {\n  xhr = xhr || XMLHttpRequest;\n  const req = new xhr();\n  return new Promise((resolve, reject) => {\n    req.onload = () => resolve(req);\n    req.onerror = err => reject(err);\n    req.open('GET', url, true);\n    for(const k in headers) {\n      req.setRequestHeader(k, headers[k]);\n    }\n    req.send();\n  });\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isEmptyObject: _isEmptyObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSubject: _isSubject\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  getValues: _getValues,\n  validateTypeValue: _validateTypeValue\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param insideIndex true if the element is inside an index container,\n *          false if not.\n * @param typeScopedContext an optional type-scoped active context for\n *          expanding values of nodes that were expressed according to\n *          a type-scoped context.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n *\n * @return a Promise that resolves to the expanded value.\n */\napi.expand = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  insideList = false,\n  insideIndex = false,\n  typeScopedContext = null,\n  expansionMap = () => undefined\n}) => {\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  // disable framing if activeProperty is @default\n  if(activeProperty === '@default') {\n    options = Object.assign({}, options, {isFrame: false});\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists unless custom mapped\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true},\n        options) === '@graph')) {\n      const mapped = await expansionMap({\n        unmappedValue: element,\n        activeCtx,\n        activeProperty,\n        options,\n        insideList\n      });\n      if(mapped === undefined) {\n        return null;\n      }\n      return mapped;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue({activeCtx, activeProperty, value: element, options});\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    let rval = [];\n    const container = _getContextValue(\n      activeCtx, activeProperty, '@container') || [];\n    insideList = insideList || container.includes('@list');\n    for(let i = 0; i < element.length; ++i) {\n      // expand element\n      let e = await api.expand({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        expansionMap,\n        insideIndex,\n        typeScopedContext\n      });\n      if(insideList && _isArray(e)) {\n        e = {'@list': e};\n      }\n\n      if(e === null) {\n        e = await expansionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options,\n          expandedParent: rval,\n          insideList\n        });\n        if(e === undefined) {\n          continue;\n        }\n      }\n\n      if(_isArray(e)) {\n        rval = rval.concat(e);\n      } else {\n        rval.push(e);\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // first, expand the active property\n  const expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n\n  // Get any property-scoped context for activeProperty\n  const propertyScopedCtx =\n    _getContextValue(activeCtx, activeProperty, '@context');\n\n  // second, determine if any type-scoped context should be reverted; it\n  // should only be reverted when the following are all true:\n  // 1. `element` is not a value or subject reference\n  // 2. `insideIndex` is false\n  typeScopedContext = typeScopedContext ||\n    (activeCtx.previousContext ? activeCtx : null);\n  let keys = Object.keys(element).sort();\n  let mustRevert = !insideIndex;\n  if(mustRevert && typeScopedContext && keys.length <= 2 &&\n    !keys.includes('@context')) {\n    for(const key of keys) {\n      const expandedProperty = _expandIri(\n        typeScopedContext, key, {vocab: true}, options);\n      if(expandedProperty === '@value') {\n        // value found, ensure type-scoped context is used to expand it\n        mustRevert = false;\n        activeCtx = typeScopedContext;\n        break;\n      }\n      if(expandedProperty === '@id' && keys.length === 1) {\n        // subject reference found, do not revert\n        mustRevert = false;\n        break;\n      }\n    }\n  }\n\n  if(mustRevert) {\n    // revert type scoped context\n    activeCtx = activeCtx.revertToPreviousContext();\n  }\n\n  // apply property-scoped context after reverting term-scoped context\n  if(!_isUndefined(propertyScopedCtx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: propertyScopedCtx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = await _processContext(\n      {activeCtx, localCtx: element['@context'], options});\n  }\n\n  // set the type-scoped context to the context on input, for use later\n  typeScopedContext = activeCtx;\n\n  // Remember the first key found expanding to @type\n  let typeKey = null;\n\n  // look for scoped contexts on `@type`\n  for(const key of keys) {\n    const expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n    if(expandedProperty === '@type') {\n      // set scoped contexts from @type\n      // avoid sorting if possible\n      typeKey = typeKey || key;\n      const value = element[key];\n      const types =\n        Array.isArray(value) ?\n          (value.length > 1 ? value.slice().sort() : value) : [value];\n      for(const type of types) {\n        const ctx = _getContextValue(typeScopedContext, type, '@context');\n        if(!_isUndefined(ctx)) {\n          activeCtx = await _processContext({\n            activeCtx,\n            localCtx: ctx,\n            options,\n            propagate: false\n          });\n        }\n      }\n    }\n  }\n\n  // process each key and value in element, ignoring @nest content\n  let rval = {};\n  await _expandObject({\n    activeCtx,\n    activeProperty,\n    expandedActiveProperty,\n    element,\n    expandedParent: rval,\n    options,\n    insideList,\n    typeKey,\n    typeScopedContext,\n    expansionMap});\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  let count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && ('@language' in rval || '@direction' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and either \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    let validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if('@direction' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and either \"@type\" ' +\n        'or either or both \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    const values = rval['@value'] === null ? [] : _asArray(rval['@value']);\n    const types = _getValues(rval, '@type');\n\n    // drop null @values unless custom mapped\n    if(_processingMode(activeCtx, 1.1) && types.includes('@json') &&\n      types.length === 1) {\n      // Any value of @value is okay if @type: @json\n    } else if(values.length === 0) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    } else if(!values.every(v => (_isString(v) || _isEmptyObject(v))) &&\n      '@language' in rval) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if(!types.every(t =>\n      (_isAbsoluteIri(t) && !(_isString(t) && t.indexOf('_:') === 0) ||\n      _isEmptyObject(t)))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language unless custom mapped\n    const mapped = await expansionMap(rval, {\n      unmappedValue: rval,\n      activeCtx,\n      activeProperty,\n      element,\n      options,\n      insideList\n    });\n    if(mapped !== undefined) {\n      rval = mapped;\n    } else {\n      rval = null;\n    }\n  }\n\n  // drop certain top-level objects that do not occur in lists, unless custom\n  // mapped\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expand each key and value of element adding to result\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element.\n * @param expandedActiveProperty the expansion of activeProperty\n * @param element the element to expand.\n * @param expandedParent the expanded result into which to add values.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param typeKey first key found expanding to @type.\n * @param typeScopedContext the context before reverting.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n */\nasync function _expandObject({\n  activeCtx,\n  activeProperty,\n  expandedActiveProperty,\n  element,\n  expandedParent,\n  options = {},\n  insideList,\n  typeKey,\n  typeScopedContext,\n  expansionMap\n}) {\n  const keys = Object.keys(element).sort();\n  const nests = [];\n  let unexpandedValue;\n\n  // Figure out if this is the type for a JSON literal\n  const isJsonType = element[typeKey] &&\n    _expandIri(activeCtx,\n      (_isArray(element[typeKey]) ? element[typeKey][0] : element[typeKey]),\n      {vocab: true}, options) === '@json';\n\n  for(const key of keys) {\n    let value = element[key];\n    let expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    let expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n\n    // drop non-absolute IRI keys that aren't keywords unless custom mapped\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      // TODO: use `await` to support async\n      expandedProperty = expansionMap({\n        unmappedProperty: key,\n        activeCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        value,\n        expandedParent\n      });\n      if(expandedProperty === undefined) {\n        continue;\n      }\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value});\n      }\n      if(expandedProperty in expandedParent &&\n         expandedProperty !== '@included' &&\n         expandedProperty !== '@type') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id') {\n      if(!_isString(value)) {\n        if(!options.isFrame) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value must a string.',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n        if(_isObject(value)) {\n          // empty object is a wildcard\n          if(!_isEmptyObject(value)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else if(_isArray(value)) {\n          if(!value.every(v => _isString(v))) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n            'of strings, if framing',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@id',\n        _asArray(value).map(v =>\n          _isString(v) ? _expandIri(activeCtx, v, {base: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    if(expandedProperty === '@type') {\n      // if framing, can be a default object, but need to expand\n      // key to determine that\n      if(_isObject(value)) {\n        value = Object.fromEntries(Object.entries(value).map(([k, v]) => [\n          _expandIri(typeScopedContext, k, {vocab: true}),\n          _asArray(v).map(vv =>\n            _expandIri(typeScopedContext, vv, {base: true, vocab: true})\n          )\n        ]));\n      }\n      _validateTypeValue(value, options.isFrame);\n      _addValue(\n        expandedParent, '@type',\n        _asArray(value).map(v =>\n          _isString(v) ?\n            _expandIri(typeScopedContext, v,\n              {base: true, vocab: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // Included blocks are treated as an array of separate object nodes sharing\n    // the same referencing active_property.\n    // For 1.0, it is skipped as are other unknown keywords\n    if(expandedProperty === '@included' && _processingMode(activeCtx, 1.1)) {\n      const includedResult = _asArray(await api.expand({\n        activeCtx,\n        activeProperty,\n        element: value,\n        options,\n        expansionMap\n      }));\n\n      // Expanded values must be node objects\n      if(!includedResult.every(v => _isSubject(v))) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; ' +\n          'values of @included must expand to node objects.',\n          'jsonld.SyntaxError', {code: 'invalid @included value', value});\n      }\n\n      _addValue(\n        expandedParent, '@included', includedResult, {propertyIsArray: true});\n      continue;\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value});\n    }\n\n    if(expandedProperty === '@value') {\n      // capture value for later\n      // \"colliding keywords\" check prevents this from being set twice\n      unexpandedValue = value;\n      if(isJsonType && _processingMode(activeCtx, 1.1)) {\n        // no coercion to array, and retain all values\n        expandedParent['@value'] = value;\n      } else {\n        _addValue(\n          expandedParent, '@value', value, {propertyIsArray: options.isFrame});\n      }\n      continue;\n    }\n\n    // @language must be a string\n    // it should match BCP47\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value});\n      }\n      // ensure language value is lowercase\n      value = _asArray(value).map(v => _isString(v) ? v.toLowerCase() : v);\n\n      // ensure language tag matches BCP47\n      for(const lang of value) {\n        if(_isString(lang) && !lang.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${lang}`);\n        }\n      }\n\n      _addValue(\n        expandedParent, '@language', value, {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @direction must be \"ltr\" or \"rtl\"\n    if(expandedProperty === '@direction') {\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@direction\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', value});\n      }\n\n      value = _asArray(value);\n\n      // ensure direction is \"ltr\" or \"rtl\"\n      for(const dir of value) {\n        if(_isString(dir) && dir !== 'ltr' && dir !== 'rtl') {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@direction\" must be \"ltr\" or \"rtl\".',\n            'jsonld.SyntaxError',\n            {code: 'invalid base direction', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@direction', value,\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value});\n      }\n      _addValue(expandedParent, '@index', value);\n      continue;\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value});\n      }\n\n      expandedValue = await api.expand({\n        activeCtx,\n        activeProperty:\n        '@reverse',\n        element: value,\n        options,\n        expansionMap\n      });\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(const property in expandedValue['@reverse']) {\n          _addValue(\n            expandedParent, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      let reverseMap = expandedParent['@reverse'] || null;\n      for(const property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = expandedParent['@reverse'] = {};\n        }\n        _addValue(reverseMap, property, [], {propertyIsArray: true});\n        const items = expandedValue[property];\n        for(let ii = 0; ii < items.length; ++ii) {\n          const item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          _addValue(reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    // nested keys\n    if(expandedProperty === '@nest') {\n      nests.push(key);\n      continue;\n    }\n\n    // use potential scoped context for key\n    let termCtx = activeCtx;\n    const ctx = _getContextValue(activeCtx, key, '@context');\n    if(!_isUndefined(ctx)) {\n      termCtx = await _processContext({\n        activeCtx,\n        localCtx: ctx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    const container = _getContextValue(termCtx, key, '@container') || [];\n\n    if(container.includes('@language') && _isObject(value)) {\n      const direction = _getContextValue(termCtx, key, '@direction');\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(termCtx, value, direction, options);\n    } else if(container.includes('@index') && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      const indexKey = _getContextValue(termCtx, key, '@index') || '@index';\n      const propertyIndex = indexKey !== '@index' &&\n        _expandIri(activeCtx, indexKey, {vocab: true}, options);\n\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey,\n        propertyIndex\n      });\n    } else if(container.includes('@id') && _isObject(value)) {\n      // handle id container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey: '@id'\n      });\n    } else if(container.includes('@type') && _isObject(value)) {\n      // handle type container (skip if value is not an object)\n      expandedValue = await _expandIndexMap({\n        // since container is `@type`, revert type scoped context when expanding\n        activeCtx: termCtx.revertToPreviousContext(),\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph: false,\n        indexKey: '@type'\n      });\n    } else {\n      // recurse into @list or @set\n      const isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        let nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: nextActiveProperty,\n          element: value,\n          options,\n          insideList: isList,\n          expansionMap\n        });\n      } else if(\n        _getContextValue(activeCtx, key, '@type') === '@json') {\n        expandedValue = {\n          '@type': '@json',\n          '@value': value\n        };\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: key,\n          element: value,\n          options,\n          insideList: false,\n          expansionMap\n        });\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      // TODO: use `await` to support async\n      expandedValue = expansionMap({\n        unmappedValue: value,\n        expandedProperty,\n        activeCtx: termCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        key,\n        expandedParent\n      });\n      if(expandedValue === undefined) {\n        continue;\n      }\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container.includes('@list')) {\n      // ensure expanded value in @list is an array\n      expandedValue = {'@list': _asArray(expandedValue)};\n    }\n\n    // convert expanded value to @graph if container specifies it\n    // and value is not, itself, a graph\n    // index cases handled above\n    if(container.includes('@graph') &&\n      !container.some(key => key === '@id' || key === '@index')) {\n      // ensure expanded values are arrays\n      expandedValue = _asArray(expandedValue)\n        .map(v => ({'@graph': _asArray(v)}));\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(termCtx.mappings.has(key) && termCtx.mappings.get(key).reverse) {\n      const reverseMap =\n        expandedParent['@reverse'] = expandedParent['@reverse'] || {};\n      expandedValue = _asArray(expandedValue);\n      for(let ii = 0; ii < expandedValue.length; ++ii) {\n        const item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        _addValue(reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // special keywords handled above\n    _addValue(expandedParent, expandedProperty, expandedValue, {\n      propertyIsArray: true\n    });\n  }\n\n  // @value must not be an object or an array (unless framing) or if @type is\n  // @json\n  if('@value' in expandedParent) {\n    if(expandedParent['@type'] === '@json' && _processingMode(activeCtx, 1.1)) {\n      // allow any value, to be verified when the object is fully expanded and\n      // the @type is @json.\n    } else if((_isObject(unexpandedValue) || _isArray(unexpandedValue)) &&\n      !options.isFrame) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: unexpandedValue});\n    }\n  }\n\n  // expand each nested key\n  for(const key of nests) {\n    const nestedValues = _isArray(element[key]) ? element[key] : [element[key]];\n    for(const nv of nestedValues) {\n      if(!_isObject(nv) || Object.keys(nv).some(k =>\n        _expandIri(activeCtx, k, {vocab: true}, options) === '@value')) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; nested value must be a node object.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @nest value', value: nv});\n      }\n      await _expandObject({\n        activeCtx,\n        activeProperty,\n        expandedActiveProperty,\n        element: nv,\n        expandedParent,\n        options,\n        insideList,\n        typeScopedContext,\n        typeKey,\n        expansionMap});\n    }\n  }\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandValue({activeCtx, activeProperty, value, options}) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  const expandedProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true}, options);\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true}, options);\n  }\n\n  // get type definition from context\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if((type === '@id' || expandedProperty === '@graph') && _isString(value)) {\n    return {'@id': _expandIri(activeCtx, value, {base: true}, options)};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab' && _isString(value)) {\n    return {\n      '@id': _expandIri(activeCtx, value, {vocab: true, base: true}, options)\n    };\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  const rval = {};\n\n  if(type && !['@id', '@vocab', '@none'].includes(type)) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    if(direction !== null) {\n      rval['@direction'] = direction;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(!['boolean', 'number', 'string'].includes(typeof value)) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Expands a language map.\n *\n * @param activeCtx the active context to use.\n * @param languageMap the language map to expand.\n * @param direction the direction to apply to values.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(activeCtx, languageMap, direction, options) {\n  const rval = [];\n  const keys = Object.keys(languageMap).sort();\n  for(const key of keys) {\n    const expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    let val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(const item of val) {\n      if(item === null) {\n        // null values are allowed (8.5) but ignored (3.1)\n        continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap});\n      }\n      const val = {'@value': item};\n      if(expandedKey !== '@none') {\n        val['@language'] = key.toLowerCase();\n      }\n      if(direction) {\n        val['@direction'] = direction;\n      }\n      rval.push(val);\n    }\n  }\n  return rval;\n}\n\nasync function _expandIndexMap(\n  {activeCtx, options, activeProperty, value, expansionMap, asGraph,\n    indexKey, propertyIndex}) {\n  const rval = [];\n  const keys = Object.keys(value).sort();\n  const isTypeIndex = indexKey === '@type';\n  for(let key of keys) {\n    // if indexKey is @type, there may be a context defined for it\n    if(isTypeIndex) {\n      const ctx = _getContextValue(activeCtx, key, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          propagate: false,\n          options\n        });\n      }\n    }\n\n    let val = value[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n\n    val = await api.expand({\n      activeCtx,\n      activeProperty,\n      element: val,\n      options,\n      insideList: false,\n      insideIndex: true,\n      expansionMap\n    });\n\n    // expand for @type, but also for @none\n    let expandedKey;\n    if(propertyIndex) {\n      if(key === '@none') {\n        expandedKey = '@none';\n      } else {\n        expandedKey = _expandValue(\n          {activeCtx, activeProperty: indexKey, value: key, options});\n      }\n    } else {\n      expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    }\n\n    if(indexKey === '@id') {\n      // expand document relative\n      key = _expandIri(activeCtx, key, {base: true}, options);\n    } else if(isTypeIndex) {\n      key = expandedKey;\n    }\n\n    for(let item of val) {\n      // If this is also a @graph container, turn items into graphs\n      if(asGraph && !_isGraph(item)) {\n        item = {'@graph': [item]};\n      }\n      if(indexKey === '@type') {\n        if(expandedKey === '@none') {\n          // ignore @none\n        } else if(item['@type']) {\n          item['@type'] = [key].concat(item['@type']);\n        } else {\n          item['@type'] = [key];\n        }\n      } else if(_isValue(item) &&\n        !['@language', '@type', '@index'].includes(indexKey)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; Attempt to add illegal key to value ' +\n          `object: \"${indexKey}\".`,\n          'jsonld.SyntaxError',\n          {code: 'invalid value object', value: item});\n      } else if(propertyIndex) {\n        // index is a property to be expanded, and values interpreted for that\n        // property\n        if(expandedKey !== '@none') {\n          // expand key as a value\n          _addValue(item, propertyIndex, expandedKey, {\n            propertyIsArray: true,\n            prependValue: true\n          });\n        }\n      } else if(expandedKey !== '@none' && !(indexKey in item)) {\n        item[indexKey] = key;\n      }\n      rval.push(item);\n    }\n  }\n  return rval;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst url = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst {\n  createNodeMap: _createNodeMap,\n  mergeNodeMapGraphs: _mergeNodeMapGraphs\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD `merged` framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\napi.frameMergedOrDefault = (input, frame, options) => {\n  // create framing state\n  const state = {\n    options,\n    embedded: false,\n    graph: '@default',\n    graphMap: {'@default': {}},\n    subjectStack: [],\n    link: {},\n    bnodeMap: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  const issuer = new util.IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphMap, '@default', issuer);\n  if(options.merged) {\n    state.graphMap['@merged'] = _mergeNodeMapGraphs(state.graphMap);\n    state.graph = '@merged';\n  }\n  state.subjects = state.graphMap[state.graph];\n\n  // frame the subjects\n  const framed = [];\n  api.frame(state, Object.keys(state.subjects).sort(), frame, framed);\n\n  // If pruning blank nodes, find those to prune\n  if(options.pruneBlankNodeIdentifiers) {\n    // remove all blank nodes appearing only once, done in compaction\n    options.bnodesToClear =\n      Object.keys(state.bnodeMap).filter(id => state.bnodeMap[id].length === 1);\n  }\n\n  // remove @preserve from results\n  options.link = {};\n  return _cleanupPreserve(framed, options);\n};\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\napi.frame = (state, subjects, frame, parent, property = null) => {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  const options = state.options;\n  const flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // get link for current graph\n  if(!state.link.hasOwnProperty(state.graph)) {\n    state.link[state.graph] = {};\n  }\n  const link = state.link[state.graph];\n\n  // filter out subjects that match the frame\n  const matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  const ids = Object.keys(matches).sort();\n  for(const id of ids) {\n    const subject = matches[id];\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {[state.graph]: {}};\n    } else {\n      state.uniqueEmbeds[state.graph] = state.uniqueEmbeds[state.graph] || {};\n    }\n\n    if(flags.embed === '@link' && id in link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, link[id]);\n      continue;\n    }\n\n    // start output for subject\n    const output = {'@id': id};\n    if(id.indexOf('_:') === 0) {\n      util.addValue(state.bnodeMap, id, output, {propertyIsArray: true});\n    }\n    link[id] = output;\n\n    // validate @embed\n    if((flags.embed === '@first' || flags.embed === '@last') && state.is11) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n\n    if(!state.embedded && state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      // skip adding this node object to the top level, as it was\n      // already included in another node object\n      continue;\n    }\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(state.embedded &&\n      (flags.embed === '@never' ||\n      _createsCircularReference(subject, state.graph, state.subjectStack))) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the first (or once) should be embedded\n    if(state.embedded &&\n       (flags.embed == '@first' || flags.embed == '@once') &&\n       state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds[state.graph]) {\n        _removeEmbed(state, id);\n      }\n    }\n\n    state.uniqueEmbeds[state.graph][id] = {parent, property};\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push({subject, graph: state.graph});\n\n    // subject is also the name of a graph\n    if(id in state.graphMap) {\n      let recurse = false;\n      let subframe = null;\n      if(!('@graph' in frame)) {\n        recurse = state.graph !== '@merged';\n        subframe = {};\n      } else {\n        subframe = frame['@graph'][0];\n        recurse = !(id === '@merged' || id === '@default');\n        if(!types.isObject(subframe)) {\n          subframe = {};\n        }\n      }\n\n      if(recurse) {\n        // recurse into graph\n        api.frame(\n          {...state, graph: id, embedded: false},\n          Object.keys(state.graphMap[id]).sort(), [subframe], output, '@graph');\n      }\n    }\n\n    // if frame has @included, recurse over its sub-frame\n    if('@included' in frame) {\n      api.frame(\n        {...state, embedded: false},\n        subjects, frame['@included'], output, '@included');\n    }\n\n    // iterate over subject properties\n    for(const prop of Object.keys(subject).sort()) {\n      // copy keywords to output\n      if(isKeyword(prop)) {\n        output[prop] = util.clone(subject[prop]);\n\n        if(prop === '@type') {\n          // count bnode values of @type\n          for(const type of subject['@type']) {\n            if(type.indexOf('_:') === 0) {\n              util.addValue(\n                state.bnodeMap, type, output, {propertyIsArray: true});\n            }\n          }\n        }\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      for(const o of subject[prop]) {\n        const subframe = (prop in frame ?\n          frame[prop] : _createImplicitFrame(flags));\n\n        // recurse into list\n        if(graphTypes.isList(o)) {\n          const subframe =\n            (frame[prop] && frame[prop][0] && frame[prop][0]['@list']) ?\n              frame[prop][0]['@list'] :\n              _createImplicitFrame(flags);\n\n          // add empty list\n          const list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          const src = o['@list'];\n          for(const oo of src) {\n            if(graphTypes.isSubjectReference(oo)) {\n              // recurse into subject reference\n              api.frame(\n                {...state, embedded: true},\n                [oo['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', util.clone(oo));\n            }\n          }\n        } else if(graphTypes.isSubjectReference(o)) {\n          // recurse into subject reference\n          api.frame(\n            {...state, embedded: true},\n            [o['@id']], subframe, output, prop);\n        } else if(_valueMatch(subframe[0], o)) {\n          // include other values, if they match\n          _addFrameOutput(output, prop, util.clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    for(const prop of Object.keys(frame).sort()) {\n      // skip keywords\n      if(prop === '@type') {\n        if(!types.isObject(frame[prop][0]) ||\n           !('@default' in frame[prop][0])) {\n          continue;\n        }\n        // allow through default types\n      } else if(isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      const next = frame[prop][0] || {};\n      const omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        let preserve = '@null';\n        if('@default' in next) {\n          preserve = util.clone(next['@default']);\n        }\n        if(!types.isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // if embed reverse values by finding nodes having this subject as a value\n    // of the associated property\n    for(const reverseProp of Object.keys(frame['@reverse'] || {}).sort()) {\n      const subframe = frame['@reverse'][reverseProp];\n      for(const subject of Object.keys(state.subjects)) {\n        const nodeValues =\n          util.getValues(state.subjects[subject], reverseProp);\n        if(nodeValues.some(v => v['@id'] === id)) {\n          // node has property referencing this subject, recurse\n          output['@reverse'] = output['@reverse'] || {};\n          util.addValue(\n            output['@reverse'], reverseProp, [], {propertyIsArray: true});\n          api.frame(\n            {...state, embedded: true},\n            [subject], subframe, output['@reverse'][reverseProp],\n            property);\n        }\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n};\n\n/**\n * Replace `@null` with `null`, removing it from arrays.\n *\n * @param input the framed, compacted output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\napi.cleanupNull = (input, options) => {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    const noNulls = input.map(v => api.cleanupNull(v, options));\n    return noNulls.filter(v => v); // removes nulls from array\n  }\n\n  if(input === '@null') {\n    return null;\n  }\n\n  if(types.isObject(input)) {\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    for(const key in input) {\n      input[key] = api.cleanupNull(input[key], options);\n    }\n  }\n  return input;\n};\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  const frame = {};\n  for(const key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param graph the graph the subject to embed is in.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, graph, subjectStack) {\n  for(let i = subjectStack.length - 1; i >= 0; --i) {\n    const subject = subjectStack[i];\n    if(subject.graph === graph &&\n      subject.subject['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  const flag = '@' + name;\n  let rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@once';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link' &&\n      rval !== '@first' && rval !== '@last' && rval !== '@once') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!types.isArray(frame) || frame.length !== 1 || !types.isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame});\n  }\n\n  if('@id' in frame[0]) {\n    for(const id of util.asArray(frame[0]['@id'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(id) || url.isAbsolute(id)) ||\n        (types.isString(id) && id.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @id in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n\n  if('@type' in frame[0]) {\n    for(const type of util.asArray(frame[0]['@type'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(type) || url.isAbsolute(type)) ||\n        (types.isString(type) && type.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @type in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  const rval = {};\n  for(const id of subjects) {\n    const subject = state.graphMap[state.graph][id];\n    if(_filterSubject(state, subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * Matches either based on explicit type inclusion where the node has any\n * type listed in the frame. If the frame has empty types defined matches\n * nodes not having a @type. If the frame has a type of {} defined matches\n * nodes having any type defined.\n *\n * Otherwise, does duck typing, where the node must have all of the\n * properties defined in the frame.\n *\n * @param state the current framing state.\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(state, subject, frame, flags) {\n  // check ducktype\n  let wildcard = true;\n  let matchesSome = false;\n\n  for(const key in frame) {\n    let matchThis = false;\n    const nodeValues = util.getValues(subject, key);\n    const isEmpty = util.getValues(frame, key).length === 0;\n\n    if(key === '@id') {\n      // match on no @id or any matching @id, including wildcard\n      if(types.isEmptyObject(frame['@id'][0] || {})) {\n        matchThis = true;\n      } else if(frame['@id'].length >= 0) {\n        matchThis = frame['@id'].includes(nodeValues[0]);\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(key === '@type') {\n      // check @type (object value means 'any' type,\n      // fall through to ducktyping)\n      wildcard = false;\n      if(isEmpty) {\n        if(nodeValues.length > 0) {\n          // don't match on no @type\n          return false;\n        }\n        matchThis = true;\n      } else if(frame['@type'].length === 1 &&\n        types.isEmptyObject(frame['@type'][0])) {\n        // match on wildcard @type if there is a type\n        matchThis = nodeValues.length > 0;\n      } else {\n        // match on a specific @type\n        for(const type of frame['@type']) {\n          if(types.isObject(type) && '@default' in type) {\n            // match on default object\n            matchThis = true;\n          } else {\n            matchThis = matchThis || nodeValues.some(tt => tt === type);\n          }\n        }\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(isKeyword(key)) {\n      continue;\n    } else {\n      // Force a copy of this frame entry so it can be manipulated\n      const thisFrame = util.getValues(frame, key)[0];\n      let hasDefault = false;\n      if(thisFrame) {\n        _validateFrame([thisFrame]);\n        hasDefault = '@default' in thisFrame;\n      }\n\n      // no longer a wildcard pattern if frame has any non-keyword properties\n      wildcard = false;\n\n      // skip, but allow match if node has no value for property, and frame has\n      // a default value\n      if(nodeValues.length === 0 && hasDefault) {\n        continue;\n      }\n\n      // if frame value is empty, don't match if subject has any value\n      if(nodeValues.length > 0 && isEmpty) {\n        return false;\n      }\n\n      if(thisFrame === undefined) {\n        // node does not match if values is not empty and the value of property\n        // in frame is match none.\n        if(nodeValues.length > 0) {\n          return false;\n        }\n        matchThis = true;\n      } else {\n        if(graphTypes.isList(thisFrame)) {\n          const listValue = thisFrame['@list'][0];\n          if(graphTypes.isList(nodeValues[0])) {\n            const nodeListValues = nodeValues[0]['@list'];\n\n            if(graphTypes.isValue(listValue)) {\n              // match on any matching value\n              matchThis = nodeListValues.some(lv => _valueMatch(listValue, lv));\n            } else if(graphTypes.isSubject(listValue) ||\n              graphTypes.isSubjectReference(listValue)) {\n              matchThis = nodeListValues.some(lv => _nodeMatch(\n                state, listValue, lv, flags));\n            }\n          }\n        } else if(graphTypes.isValue(thisFrame)) {\n          matchThis = nodeValues.some(nv => _valueMatch(thisFrame, nv));\n        } else if(graphTypes.isSubjectReference(thisFrame)) {\n          matchThis =\n            nodeValues.some(nv => _nodeMatch(state, thisFrame, nv, flags));\n        } else if(types.isObject(thisFrame)) {\n          matchThis = nodeValues.length > 0;\n        } else {\n          matchThis = false;\n        }\n      }\n    }\n\n    // all non-defaulted values must match if requireAll is set\n    if(!matchThis && flags.requireAll) {\n      return false;\n    }\n\n    matchesSome = matchesSome || matchThis;\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  const embeds = state.uniqueEmbeds[state.graph];\n  const embed = embeds[id];\n  const parent = embed.parent;\n  const property = embed.property;\n\n  // create reference to replace embed\n  const subject = {'@id': id};\n\n  // remove existing embed\n  if(types.isArray(parent)) {\n    // replace subject with reference\n    for(let i = 0; i < parent.length; ++i) {\n      if(util.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    const useArray = types.isArray(parent[property]);\n    util.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    util.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  const removeDependents = id => {\n    // get embed keys as a separate array to enable deleting keys in map\n    const ids = Object.keys(embeds);\n    for(const next of ids) {\n      if(next in embeds && types.isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Removes the @preserve keywords from expanded result of framing.\n *\n * @param input the framed, framed output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\nfunction _cleanupPreserve(input, options) {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    return input.map(value => _cleanupPreserve(value, options));\n  }\n\n  if(types.isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      return input['@preserve'][0];\n    }\n\n    // skip @values\n    if(graphTypes.isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(graphTypes.isList(input)) {\n      input['@list'] = _cleanupPreserve(input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(const prop in input) {\n      // potentially remove the id, if it is an unreference bnode\n      if(prop === '@id' && options.bnodesToClear.includes(input[prop])) {\n        delete input['@id'];\n        continue;\n      }\n\n      input[prop] = _cleanupPreserve(input[prop], options);\n    }\n  }\n  return input;\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(types.isObject(parent)) {\n    util.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Node matches if it is a node, and matches the pattern as a frame.\n *\n * @param state the current framing state.\n * @param pattern used to match value\n * @param value to check\n * @param flags the frame flags.\n */\nfunction _nodeMatch(state, pattern, value, flags) {\n  if(!('@id' in value)) {\n    return false;\n  }\n  const nodeObject = state.subjects[value['@id']];\n  return nodeObject && _filterSubject(state, nodeObject, pattern, flags);\n}\n\n/**\n * Value matches if it is a value and matches the value pattern\n *\n * * `pattern` is empty\n * * @values are the same, or `pattern[@value]` is a wildcard, and\n * * @types are the same or `value[@type]` is not null\n *   and `pattern[@type]` is `{}`, or `value[@type]` is null\n *   and `pattern[@type]` is null or `[]`, and\n * * @languages are the same or `value[@language]` is not null\n *   and `pattern[@language]` is `{}`, or `value[@language]` is null\n *   and `pattern[@language]` is null or `[]`.\n *\n * @param pattern used to match value\n * @param value to check\n */\nfunction _valueMatch(pattern, value) {\n  const v1 = value['@value'];\n  const t1 = value['@type'];\n  const l1 = value['@language'];\n  const v2 = pattern['@value'] ?\n    (types.isArray(pattern['@value']) ?\n      pattern['@value'] : [pattern['@value']]) :\n    [];\n  const t2 = pattern['@type'] ?\n    (types.isArray(pattern['@type']) ?\n      pattern['@type'] : [pattern['@type']]) :\n    [];\n  const l2 = pattern['@language'] ?\n    (types.isArray(pattern['@language']) ?\n      pattern['@language'] : [pattern['@language']]) :\n    [];\n\n  if(v2.length === 0 && t2.length === 0 && l2.length === 0) {\n    return true;\n  }\n  if(!(v2.includes(v1) || types.isEmptyObject(v2[0]))) {\n    return false;\n  }\n  if(!(!t1 && t2.length === 0 || t2.includes(t1) || t1 &&\n    types.isEmptyObject(t2[0]))) {\n    return false;\n  }\n  if(!(!l1 && l2.length === 0 || l2.includes(l1) || l1 &&\n    types.isEmptyObject(l2[0]))) {\n    return false;\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\n\n// constants\nconst {\n  // RDF,\n  RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  // RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n *\n * @return a Promise that resolves to the JSON-LD output.\n */\napi.fromRDF = async (\n  dataset,\n  {\n    useRdfType = false,\n    useNativeTypes = false,\n    rdfDirection = null\n  }\n) => {\n  const defaultGraph = {};\n  const graphMap = {'@default': defaultGraph};\n  const referencedOnce = {};\n\n  for(const quad of dataset) {\n    // TODO: change 'name' to 'graph'\n    const name = (quad.graph.termType === 'DefaultGraph') ?\n      '@default' : quad.graph.value;\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n\n    const nodeMap = graphMap[name];\n\n    // get subject, predicate, object\n    const s = quad.subject.value;\n    const p = quad.predicate.value;\n    const o = quad.object;\n\n    if(!(s in nodeMap)) {\n      nodeMap[s] = {'@id': s};\n    }\n    const node = nodeMap[s];\n\n    const objectIsNode = o.termType.endsWith('Node');\n    if(objectIsNode && !(o.value in nodeMap)) {\n      nodeMap[o.value] = {'@id': o.value};\n    }\n\n    if(p === RDF_TYPE && !useRdfType && objectIsNode) {\n      util.addValue(node, '@type', o.value, {propertyIsArray: true});\n      continue;\n    }\n\n    const value = _RDFToObject(o, useNativeTypes, rdfDirection);\n    util.addValue(node, p, value, {propertyIsArray: true});\n\n    // object may be an RDF list/partial list node but we can't know easily\n    // until all triples are read\n    if(objectIsNode) {\n      if(o.value === RDF_NIL) {\n        // track rdf:nil uniquely per graph\n        const object = nodeMap[o.value];\n        if(!('usages' in object)) {\n          object.usages = [];\n        }\n        object.usages.push({\n          node,\n          property: p,\n          value\n        });\n      } else if(o.value in referencedOnce) {\n        // object referenced more than once\n        referencedOnce[o.value] = false;\n      } else {\n        // keep track of single reference\n        referencedOnce[o.value] = {\n          node,\n          property: p,\n          value\n        };\n      }\n    }\n  }\n\n  /*\n  for(let name in dataset) {\n    const graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    const nodeMap = graphMap[name];\n    for(let ti = 0; ti < graph.length; ++ti) {\n      const triple = graph[ti];\n\n      // get subject, predicate, object\n      const s = triple.subject.value;\n      const p = triple.predicate.value;\n      const o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      const node = nodeMap[s];\n\n      const objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !useRdfType && objectIsId) {\n        util.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      const value = _RDFToObject(o, useNativeTypes);\n      util.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          const object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }*/\n\n  // convert linked lists to @list arrays\n  for(const name in graphMap) {\n    const graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    const nil = graphObject[RDF_NIL];\n    if(!nil.usages) {\n      continue;\n    }\n    for(let usage of nil.usages) {\n      let node = usage.node;\n      let property = usage.property;\n      let head = usage.value;\n      const list = [];\n      const listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      let nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        types.isObject(referencedOnce[node['@id']]) &&\n        types.isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        types.isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 ||\n          (nodeKeyCount === 4 && types.isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(!graphTypes.isBlankNode(node)) {\n          break;\n        }\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(const listNode of listNodes) {\n        delete graphObject[listNode];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  const result = [];\n  const subjects = Object.keys(defaultGraph).sort();\n  for(const subject of subjects) {\n    const node = defaultGraph[subject];\n    if(subject in graphMap) {\n      const graph = node['@graph'] = [];\n      const graphObject = graphMap[subject];\n      const graphSubjects = Object.keys(graphObject).sort();\n      for(const graphSubject of graphSubjects) {\n        const node = graphObject[graphSubject];\n        // only add full subjects to top-level\n        if(!graphTypes.isSubjectReference(node)) {\n          graph.push(node);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!graphTypes.isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes, rdfDirection) {\n  // convert NamedNode/BlankNode object to JSON-LD\n  if(o.termType.endsWith('Node')) {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  const rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    let type = o.datatype.value;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    if(type === RDF_JSON_LITERAL) {\n      type = '@json';\n      try {\n        rval['@value'] = JSON.parse(rval['@value']);\n      } catch(e) {\n        throw new JsonLdError(\n          'JSON literal could not be parsed.',\n          'jsonld.InvalidJsonLiteral',\n          {code: 'invalid JSON literal', value: rval['@value'], cause: e});\n      }\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(types.isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          const i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if(![XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING].includes(type)) {\n        rval['@type'] = type;\n      }\n    } else if(rdfDirection === 'i18n-datatype' &&\n      type.startsWith('https://www.w3.org/ns/i18n#')) {\n      const [, language, direction] = type.split(/[#_]/);\n      if(language.length > 0) {\n        rval['@language'] = language;\n        if(!language.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${language}`);\n        }\n      }\n      rval['@direction'] = direction;\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\napi.isSubject = v => {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  if(types.isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    const keyCount = Object.keys(v).length;\n    return (keyCount > 1 || !('@id' in v));\n  }\n  return false;\n};\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\napi.isSubjectReference = v =>\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  (types.isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\napi.isValue = v =>\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  types.isObject(v) && ('@value' in v);\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\napi.isList = v =>\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  types.isObject(v) && ('@list' in v);\n\n/**\n * Returns true if the given value is a @graph.\n *\n * @return true if the value is a @graph, false if not.\n */\napi.isGraph = v => {\n  // Note: A value is a graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It may have '@id' or '@index'\n  return types.isObject(v) &&\n    '@graph' in v &&\n    Object.keys(v)\n      .filter(key => key !== '@id' && key !== '@index').length === 1;\n};\n\n/**\n * Returns true if the given value is a simple @graph.\n *\n * @return true if the value is a simple @graph, false if not.\n */\napi.isSimpleGraph = v => {\n  // Note: A value is a simple graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It has only 1 key or 2 keys where one of them is `@index`.\n  return api.isGraph(v) && !('@id' in v);\n};\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\napi.isBlankNode = v => {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  if(types.isObject(v)) {\n    if('@id' in v) {\n      return (v['@id'].indexOf('_:') === 0);\n    }\n    return (Object.keys(v).length === 0 ||\n      !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n  }\n  return false;\n};\n","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2019 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst canonize = require('rdf-canonize');\nconst platform = require('./platform');\nconst util = require('./util');\nconst ContextResolver = require('./ContextResolver');\nconst IdentifierIssuer = util.IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\nconst LRU = require('lru-cache');\nconst NQuads = require('./NQuads');\n\nconst {expand: _expand} = require('./expand');\nconst {flatten: _flatten} = require('./flatten');\nconst {fromRDF: _fromRDF} = require('./fromRdf');\nconst {toRDF: _toRDF} = require('./toRdf');\n\nconst {\n  frameMergedOrDefault: _frameMergedOrDefault,\n  cleanupNull: _cleanupNull\n} = require('./frame');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString\n} = require('./types');\n\nconst {\n  isSubjectReference: _isSubjectReference,\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getInitialContext: _getInitialContext,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  compact: _compact,\n  compactIri: _compactIri\n} = require('./compact');\n\nconst {\n  createNodeMap: _createNodeMap,\n  createMergedNodeMap: _createMergedNodeMap,\n  mergeNodeMaps: _mergeNodeMaps\n} = require('./nodeMap');\n\n/* eslint-disable indent */\n// attaches jsonld API to the given object\nconst wrapper = function(jsonld) {\n\n/** Registered RDF dataset parsers hashed by content-type. */\nconst _rdfParsers = {};\n\n// resolved context cache\n// TODO: consider basing max on context size rather than number\nconst RESOLVED_CONTEXT_CACHE_MAX_SIZE = 100;\nconst _resolvedContextCache = new LRU({max: RESOLVED_CONTEXT_CACHE_MAX_SIZE});\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [compactToRelative] true to compact IRIs to be relative to document\n *            base, false to keep absolute (default: true)\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [framing] true if compaction is occuring during a framing operation.\n *          [compactionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the compacted output.\n */\njsonld.compact = async function(input, ctx, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not compact, too few arguments.');\n  }\n\n  if(ctx === null) {\n    throw new JsonLdError(\n      'The compaction context must not be null.',\n      'jsonld.CompactError', {code: 'invalid local context'});\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    compactArrays: true,\n    compactToRelative: true,\n    graph: false,\n    skipExpansion: false,\n    link: false,\n    issuer: new IdentifierIssuer('_:b'),\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n  if(!options.compactToRelative) {\n    delete options.base;\n  }\n\n  // expand input\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), ctx, options);\n\n  // do compaction\n  let compacted = await _compact({\n    activeCtx,\n    element: expanded,\n    options,\n    compactionMap: options.compactionMap\n  });\n\n  // perform clean up\n  if(options.compactArrays && !options.graph && _isArray(compacted)) {\n    if(compacted.length === 1) {\n      // simplify to a single item\n      compacted = compacted[0];\n    } else if(compacted.length === 0) {\n      // simplify to an empty object\n      compacted = {};\n    }\n  } else if(options.graph && _isObject(compacted)) {\n    // always use array if graph option is on\n    compacted = [compacted];\n  }\n\n  // follow @context key\n  if(_isObject(ctx) && '@context' in ctx) {\n    ctx = ctx['@context'];\n  }\n\n  // build output context\n  ctx = util.clone(ctx);\n  if(!_isArray(ctx)) {\n    ctx = [ctx];\n  }\n  // remove empty contexts\n  const tmp = ctx;\n  ctx = [];\n  for(let i = 0; i < tmp.length; ++i) {\n    if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n      ctx.push(tmp[i]);\n    }\n  }\n\n  // remove array if only one context\n  const hasContext = (ctx.length > 0);\n  if(ctx.length === 1) {\n    ctx = ctx[0];\n  }\n\n  // add context and/or @graph\n  if(_isArray(compacted)) {\n    // use '@graph' keyword\n    const graphAlias = _compactIri({\n      activeCtx, iri: '@graph', relativeTo: {vocab: true}\n    });\n    const graph = compacted;\n    compacted = {};\n    if(hasContext) {\n      compacted['@context'] = ctx;\n    }\n    compacted[graphAlias] = graph;\n  } else if(_isObject(compacted) && hasContext) {\n    // reorder keys so @context is first\n    const graph = compacted;\n    compacted = {'@context': ctx};\n    for(const key in graph) {\n      compacted[key] = graph[key];\n    }\n  }\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the expanded output.\n */\njsonld.expand = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not expand, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    keepFreeFloatingNodes: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.expansionMap === false) {\n    options.expansionMap = undefined;\n  }\n\n  // build set of objects that may have @contexts to resolve\n  const toResolve = {};\n\n  // build set of contexts to process prior to expansion\n  const contextsToProcess = [];\n\n  // if an `expandContext` has been given ensure it gets resolved\n  if('expandContext' in options) {\n    const expandContext = util.clone(options.expandContext);\n    if(_isObject(expandContext) && '@context' in expandContext) {\n      toResolve.expandContext = expandContext;\n    } else {\n      toResolve.expandContext = {'@context': expandContext};\n    }\n    contextsToProcess.push(toResolve.expandContext);\n  }\n\n  // if input is a string, attempt to dereference remote document\n  let defaultBase;\n  if(!_isString(input)) {\n    // input is not a URL, do not need to retrieve it first\n    toResolve.input = util.clone(input);\n  } else {\n    // load remote doc\n    const remoteDoc = await jsonld.get(input, options);\n    defaultBase = remoteDoc.documentUrl;\n    toResolve.input = remoteDoc.document;\n    if(remoteDoc.contextUrl) {\n      // context included in HTTP link header and must be resolved\n      toResolve.remoteContext = {'@context': remoteDoc.contextUrl};\n      contextsToProcess.push(toResolve.remoteContext);\n    }\n  }\n\n  // set default base\n  if(!('base' in options)) {\n    options.base = defaultBase || '';\n  }\n\n  // process any additional contexts\n  let activeCtx = _getInitialContext(options);\n  for(const localCtx of contextsToProcess) {\n    activeCtx = await _processContext({activeCtx, localCtx, options});\n  }\n\n  // expand resolved input\n  let expanded = await _expand({\n    activeCtx,\n    element: toResolve.input,\n    options,\n    expansionMap: options.expansionMap\n  });\n\n  // optimize away @graph with no other properties\n  if(_isObject(expanded) && ('@graph' in expanded) &&\n    Object.keys(expanded).length === 1) {\n    expanded = expanded['@graph'];\n  } else if(expanded === null) {\n    expanded = [];\n  }\n\n  // normalize to an array\n  if(!_isArray(expanded)) {\n    expanded = [expanded];\n  }\n\n  return expanded;\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the flattened output.\n */\njsonld.flatten = async function(input, ctx, options) {\n  if(arguments.length < 1) {\n    return new TypeError('Could not flatten, too few arguments.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // do flattening\n  const flattened = _flatten(expanded);\n\n  if(ctx === null) {\n    // no compaction required\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the framed output.\n */\njsonld.frame = async function(input, frame, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not frame, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    embed: '@once',\n    explicit: false,\n    requireAll: false,\n    omitDefault: false,\n    bnodesToClear: [],\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // if frame is a string, attempt to dereference remote document\n  if(_isString(frame)) {\n    // load remote doc\n    const remoteDoc = await jsonld.get(frame, options);\n    frame = remoteDoc.document;\n\n    if(remoteDoc.contextUrl) {\n      // inject link header @context into frame\n      let ctx = frame['@context'];\n      if(!ctx) {\n        ctx = remoteDoc.contextUrl;\n      } else if(_isArray(ctx)) {\n        ctx.push(remoteDoc.contextUrl);\n      } else {\n        ctx = [ctx, remoteDoc.contextUrl];\n      }\n      frame['@context'] = ctx;\n    }\n  }\n\n  const frameContext = frame ? frame['@context'] || {} : {};\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), frameContext, options);\n\n  // mode specific defaults\n  if(!options.hasOwnProperty('omitGraph')) {\n    options.omitGraph = _processingMode(activeCtx, 1.1);\n  }\n  if(!options.hasOwnProperty('pruneBlankNodeIdentifiers')) {\n    options.pruneBlankNodeIdentifiers = _processingMode(activeCtx, 1.1);\n  }\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // expand frame\n  const opts = {...options};\n  opts.isFrame = true;\n  opts.keepFreeFloatingNodes = true;\n  const expandedFrame = await jsonld.expand(frame, opts);\n\n  // if the unexpanded frame includes a key expanding to @graph, frame the\n  // default graph, otherwise, the merged graph\n  const frameKeys = Object.keys(frame)\n    .map(key => _expandIri(activeCtx, key, {vocab: true}));\n  opts.merged = !frameKeys.includes('@graph');\n  opts.is11 = _processingMode(activeCtx, 1.1);\n\n  // do framing\n  const framed = _frameMergedOrDefault(expanded, expandedFrame, opts);\n\n  opts.graph = !options.omitGraph;\n  opts.skipExpansion = true;\n  opts.link = {};\n  opts.framing = true;\n  let compacted = await jsonld.compact(framed, frameContext, opts);\n\n  // replace @null with null, compacting arrays\n  opts.link = {};\n  compacted = _cleanupNull(compacted, opts);\n\n  return compacted;\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param [ctx] the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the linked output.\n */\njsonld.link = async function(input, ctx, options) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  const frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  return jsonld.frame(input, frame, options);\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URDNA2015`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/n-quads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/n-quads' for N-Quads.\n *          [documentLoader(url, options)] the document loader.\n *          [useNative] true to use a native canonize algorithm\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the normalized output.\n */\njsonld.normalize = jsonld.canonize = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not canonize, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    algorithm: 'URDNA2015',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/n-quads' &&\n      options.inputFormat !== 'application/nquads') {\n      throw new JsonLdError(\n        'Unknown canonicalization input format.',\n        'jsonld.CanonizeError');\n    }\n    // TODO: `await` for async parsers\n    const parsedInput = NQuads.parse(input);\n\n    // do canonicalization\n    return canonize.canonize(parsedInput, options);\n  }\n\n  // convert to RDF dataset then do normalization\n  const opts = {...options};\n  delete opts.format;\n  opts.produceGeneralizedRdf = false;\n  const dataset = await jsonld.toRDF(input, opts);\n\n  // do canonicalization\n  return canonize.canonize(dataset, options);\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/n-quads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n *\n * @return a Promise that resolves to the JSON-LD document.\n */\njsonld.fromRDF = async function(dataset, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert from RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    format: _isString(dataset) ? 'application/n-quads' : undefined\n  });\n\n  const {format} = options;\n  let {rdfParser} = options;\n\n  // handle special format\n  if(format) {\n    // check supported formats\n    rdfParser = rdfParser || _rdfParsers[format];\n    if(!rdfParser) {\n      throw new JsonLdError(\n        'Unknown input format.',\n        'jsonld.UnknownFormat', {format});\n    }\n  } else {\n    // no-op parser, assume dataset already parsed\n    rdfParser = () => dataset;\n  }\n\n  // rdfParser must be synchronous or return a promise, no callback support\n  const parsedDataset = await rdfParser(dataset);\n  return _fromRDF(parsedDataset, options);\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [format] the format to use to output a string:\n *            'application/n-quads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the RDF dataset.\n */\njsonld.toRDF = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert to RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // TODO: support toRDF custom map?\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    // expand input\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // output RDF dataset\n  const dataset = _toRDF(expanded, options);\n  if(options.format) {\n    if(options.format === 'application/n-quads' ||\n      options.format === 'application/nquads') {\n      return NQuads.serialize(dataset);\n    }\n    throw new JsonLdError(\n      'Unknown output format.',\n      'jsonld.UnknownFormat', {format: options.format});\n  }\n\n  return dataset;\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a merged\n * map of node ID => node. All graphs will be merged into the default graph.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged node map.\n */\njsonld.createNodeMap = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not create node map, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  return _createMergedNodeMap(expanded, options);\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged output.\n */\njsonld.merge = async function(docs, ctx, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not merge, too few arguments.');\n  }\n  if(!_isArray(docs)) {\n    throw new TypeError('Could not merge, \"docs\" must be an array.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand all documents\n  const expanded = await Promise.all(docs.map(doc => {\n    const opts = {...options};\n    return jsonld.expand(doc, opts);\n  }));\n\n  let mergeNodes = true;\n  if('mergeNodes' in options) {\n    mergeNodes = options.mergeNodes;\n  }\n\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n\n  for(let i = 0; i < expanded.length; ++i) {\n    // uniquely relabel blank nodes\n    const doc = util.relabelBlankNodes(expanded[i], {\n      issuer: new IdentifierIssuer('_:b' + i + '-')\n    });\n\n    // add nodes to the shared node map graphs if merging nodes, to a\n    // separate graph set if not\n    const _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n    _createNodeMap(doc, _graphs, '@default', issuer);\n\n    if(_graphs !== graphs) {\n      // merge document graphs but don't merge existing nodes\n      for(const graphName in _graphs) {\n        const _nodeMap = _graphs[graphName];\n        if(!(graphName in graphs)) {\n          graphs[graphName] = _nodeMap;\n          continue;\n        }\n        const nodeMap = graphs[graphName];\n        for(const key in _nodeMap) {\n          if(!(key in nodeMap)) {\n            nodeMap[key] = _nodeMap[key];\n          }\n        }\n      }\n    }\n  }\n\n  // add all non-default graphs to default graph\n  const defaultGraph = _mergeNodeMaps(graphs);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  if(ctx === null) {\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * The default document loader for external documents.\n *\n * @param url the URL to load.\n *\n * @return a promise that resolves to the remote document.\n */\nObject.defineProperty(jsonld, 'documentLoader', {\n  get: () => jsonld._documentLoader,\n  set: v => jsonld._documentLoader = v\n});\n// default document loader not implemented\njsonld.documentLoader = async url => {\n  throw new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed', url});\n};\n\n/**\n * Gets a remote JSON-LD document using the default document loader or\n * one given in the passed options.\n *\n * @param url the URL to fetch.\n * @param [options] the options to use:\n *          [documentLoader] the document loader to use.\n *\n * @return a Promise that resolves to the retrieved remote document.\n */\njsonld.get = async function(url, options) {\n  let load;\n  if(typeof options.documentLoader === 'function') {\n    load = options.documentLoader;\n  } else {\n    load = jsonld.documentLoader;\n  }\n\n  const remoteDoc = await load(url);\n\n  try {\n    if(!remoteDoc.document) {\n      throw new JsonLdError(\n        'No remote document found at the given URL.',\n        'jsonld.NullRemoteDocument');\n    }\n    if(_isString(remoteDoc.document)) {\n      remoteDoc.document = JSON.parse(remoteDoc.document);\n    }\n  } catch(e) {\n    throw new JsonLdError(\n      'Could not retrieve a JSON-LD document from the URL.',\n      'jsonld.LoadDocumentError', {\n        code: 'loading document failed',\n        cause: e,\n        remoteDoc\n      });\n  }\n\n  return remoteDoc;\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the new active context.\n */\njsonld.processContext = async function(\n  activeCtx, localCtx, options) {\n  // set default options\n  options = _setDefaults(options, {\n    base: '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return _getInitialContext(options);\n  }\n\n  // get URLs in localCtx\n  localCtx = util.clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n\n  return _processContext({activeCtx, localCtx, options});\n};\n\n// backwards compatibility\njsonld.getContextValue = require('./context').getContextValue;\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'xhr' and 'node'.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given one parameter,\n * a string of input. An RDF dataset parser can be synchronous or\n * asynchronous (by returning a promise).\n *\n * @param contentType the content-type for the parser.\n * @param parser(input) the parser function (takes a string as a parameter\n *          and either returns an RDF dataset or a Promise that resolves to one.\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/n-quads', NQuads.parse);\njsonld.registerRDFParser('application/nquads', NQuads.parse);\n\n/* URL API */\njsonld.url = require('./url');\n\n/* Utility API */\njsonld.util = util;\n// backwards compatibility\nObject.assign(jsonld, util);\n\n// reexpose API as jsonld.promises for backwards compatability\njsonld.promises = jsonld;\n\n// backwards compatibility\njsonld.RequestQueue = require('./RequestQueue');\n\n/* WebIDL API */\njsonld.JsonLdProcessor = require('./JsonLdProcessor')(jsonld);\n\nplatform.setupGlobals(jsonld);\nplatform.setupDocumentLoaders(jsonld);\n\nfunction _setDefaults(options, {\n  documentLoader = jsonld.documentLoader,\n  ...defaults\n}) {\n  return Object.assign({}, {documentLoader}, defaults, options);\n}\n\n// end of jsonld API `wrapper` factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nconst factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\n// wrap the main jsonld API instance\nwrapper(factory);\n// export API\nmodule.exports = factory;\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Creates a merged JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *\n * @return the node map.\n */\napi.createMergedNodeMap = (input, options) => {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  const issuer = options.issuer || new util.IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n  api.createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return api.mergeNodeMaps(graphs);\n};\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\napi.createNodeMap = (input, graphs, graph, issuer, name, list) => {\n  // recurse through array\n  if(types.isArray(input)) {\n    for(const node of input) {\n      api.createNodeMap(node, graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!types.isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(graphTypes.isValue(input)) {\n    if('@type' in input) {\n      let type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  } else if(list && graphTypes.isList(input)) {\n    const _list = [];\n    api.createNodeMap(input['@list'], graphs, graph, issuer, name, _list);\n    list.push({'@list': _list});\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    const types = input['@type'];\n    for(const type of types) {\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(types.isUndefined(name)) {\n    name = graphTypes.isBlankNode(input) ?\n      issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  const subjects = graphs[graph];\n  const subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  const properties = Object.keys(input).sort();\n  for(let property of properties) {\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      const referencedNode = {'@id': name};\n      const reverseMap = input['@reverse'];\n      for(const reverseProperty in reverseMap) {\n        const items = reverseMap[reverseProperty];\n        for(const item of items) {\n          let itemName = item['@id'];\n          if(graphTypes.isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          api.createNodeMap(item, graphs, graph, issuer, itemName);\n          util.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      api.createNodeMap(input[property], graphs, name, issuer);\n      continue;\n    }\n\n    // recurse into included\n    if(property === '@included') {\n      api.createNodeMap(input[property], graphs, graph, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    const objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      util.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(let o of objects) {\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(graphTypes.isSubject(o) || graphTypes.isSubjectReference(o)) {\n        // skip null @id\n        if('@id' in o && !o['@id']) {\n          continue;\n        }\n\n        // relabel blank node @id\n        const id = graphTypes.isBlankNode(o) ?\n          issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        util.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        api.createNodeMap(o, graphs, graph, issuer, id);\n      } else if(graphTypes.isValue(o)) {\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else if(graphTypes.isList(o)) {\n        // handle @list\n        const _list = [];\n        api.createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        api.createNodeMap(o, graphs, graph, issuer, name);\n        util.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n};\n\n/**\n * Merge separate named graphs into a single merged graph including\n * all nodes from the default graph and named graphs.\n *\n * @param graphs a map of graph name to subject map.\n *\n * @return the merged graph map.\n */\napi.mergeNodeMapGraphs = graphs => {\n  const merged = {};\n  for(const name of Object.keys(graphs).sort()) {\n    for(const id of Object.keys(graphs[name]).sort()) {\n      const node = graphs[name][id];\n      if(!(id in merged)) {\n        merged[id] = {'@id': id};\n      }\n      const mergedNode = merged[id];\n\n      for(const property of Object.keys(node).sort()) {\n        if(isKeyword(property) && property !== '@type') {\n          // copy keywords\n          mergedNode[property] = util.clone(node[property]);\n        } else {\n          // merge objects\n          for(const value of node[property]) {\n            util.addValue(\n              mergedNode, property, util.clone(value),\n              {propertyIsArray: true, allowDuplicate: false});\n          }\n        }\n      }\n    }\n  }\n\n  return merged;\n};\n\napi.mergeNodeMaps = graphs => {\n  // add all non-default graphs to default graph\n  const defaultGraph = graphs['@default'];\n  const graphNames = Object.keys(graphs).sort();\n  for(const graphName of graphNames) {\n    if(graphName === '@default') {\n      continue;\n    }\n    const nodeMap = graphs[graphName];\n    let subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    const graph = subject['@graph'];\n    for(const id of Object.keys(nodeMap).sort()) {\n      const node = nodeMap[id];\n      // only add full subjects\n      if(!graphTypes.isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n};\n","/*\n * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst xhrLoader = require('./documentLoaders/xhr');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Setup browser document loaders.\n *\n * @param jsonld the jsonld api.\n */\napi.setupDocumentLoaders = function(jsonld) {\n  if(typeof XMLHttpRequest !== 'undefined') {\n    jsonld.documentLoaders.xhr = xhrLoader;\n    // use xhr document loader by default\n    jsonld.useDocumentLoader('xhr');\n  }\n};\n\n/**\n * Setup browser globals.\n *\n * @param jsonld the jsonld api.\n */\napi.setupGlobals = function(jsonld) {\n  // setup browser global JsonLdProcessor\n  if(typeof globalThis.JsonLdProcessor === 'undefined') {\n    Object.defineProperty(globalThis, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: jsonld.JsonLdProcessor\n    });\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {createNodeMap} = require('./nodeMap');\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst jsonCanonicalize = require('canonicalize');\nconst types = require('./types');\nconst util = require('./util');\n\nconst {\n  // RDF,\n  // RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\napi.toRDF = (input, options) => {\n  // create node map for default graph (and any named graphs)\n  const issuer = new util.IdentifierIssuer('_:b');\n  const nodeMap = {'@default': {}};\n  createNodeMap(input, nodeMap, '@default', issuer);\n\n  const dataset = [];\n  const graphNames = Object.keys(nodeMap).sort();\n  for(const graphName of graphNames) {\n    let graphTerm;\n    if(graphName === '@default') {\n      graphTerm = {termType: 'DefaultGraph', value: ''};\n    } else if(_isAbsoluteIri(graphName)) {\n      if(graphName.startsWith('_:')) {\n        graphTerm = {termType: 'BlankNode'};\n      } else {\n        graphTerm = {termType: 'NamedNode'};\n      }\n      graphTerm.value = graphName;\n    } else {\n      // skip relative IRIs (not valid RDF)\n      continue;\n    }\n    _graphToRDF(dataset, nodeMap[graphName], graphTerm, issuer, options);\n  }\n\n  return dataset;\n};\n\n/**\n * Adds RDF quads for a particular graph to the given dataset.\n *\n * @param dataset the dataset to append RDF quads to.\n * @param graph the graph to create RDF quads for.\n * @param graphTerm the graph term for each quad.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(dataset, graph, graphTerm, issuer, options) {\n  const ids = Object.keys(graph).sort();\n  for(const id of ids) {\n    const node = graph[id];\n    const properties = Object.keys(node).sort();\n    for(let property of properties) {\n      const items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(isKeyword(property)) {\n        continue;\n      }\n\n      for(const item of items) {\n        // RDF subject\n        const subject = {\n          termType: id.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: id\n        };\n\n        // skip relative IRI subjects (not valid RDF)\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        const predicate = {\n          termType: property.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: property\n        };\n\n        // skip relative IRI predicates (not valid RDF)\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.termType === 'BlankNode' &&\n          !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert list, value or node object to triple\n        const object =\n          _objectToRDF(item, issuer, dataset, graphTerm, options.rdfDirection);\n        // skip null objects (they are relative IRIs)\n        if(object) {\n          dataset.push({\n            subject,\n            predicate,\n            object,\n            graph: graphTerm\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF quads\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the array of quads to append to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the head of the list.\n */\nfunction _listToRDF(list, issuer, dataset, graphTerm, rdfDirection) {\n  const first = {termType: 'NamedNode', value: RDF_FIRST};\n  const rest = {termType: 'NamedNode', value: RDF_REST};\n  const nil = {termType: 'NamedNode', value: RDF_NIL};\n\n  const last = list.pop();\n  // Result is the head of the list\n  const result = last ? {termType: 'BlankNode', value: issuer.getId()} : nil;\n  let subject = result;\n\n  for(const item of list) {\n    const object = _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection);\n    const next = {termType: 'BlankNode', value: issuer.getId()};\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: next,\n      graph: graphTerm\n    });\n    subject = next;\n  }\n\n  // Tail of list\n  if(last) {\n    const object = _objectToRDF(last, issuer, dataset, graphTerm, rdfDirection);\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: nil,\n      graph: graphTerm\n    });\n  }\n\n  return result;\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string,\n * node object to an RDF resource, or adds a list.\n *\n * @param item the JSON-LD value or node object.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the dataset to append RDF quads to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection) {\n  const object = {};\n\n  // convert value object to RDF\n  if(graphTypes.isValue(item)) {\n    object.termType = 'Literal';\n    object.value = undefined;\n    object.datatype = {\n      termType: 'NamedNode'\n    };\n    let value = item['@value'];\n    const datatype = item['@type'] || null;\n\n    // convert to XSD/JSON datatypes as appropriate\n    if(datatype === '@json') {\n      object.value = jsonCanonicalize(value);\n      object.datatype.value = RDF_JSON_LITERAL;\n    } else if(types.isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype.value = datatype || XSD_BOOLEAN;\n    } else if(types.isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!types.isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype.value = datatype || XSD_DOUBLE;\n    } else if(types.isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype.value = datatype || XSD_INTEGER;\n    } else if(rdfDirection === 'i18n-datatype' &&\n      '@direction' in item) {\n      const datatype = 'https://www.w3.org/ns/i18n#' +\n        (item['@language'] || '') +\n        `_${item['@direction']}`;\n      object.datatype.value = datatype;\n      object.value = value;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype.value = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype.value = datatype || XSD_STRING;\n    }\n  } else if(graphTypes.isList(item)) {\n    const _list =\n      _listToRDF(item['@list'], issuer, dataset, graphTerm, rdfDirection);\n    object.termType = _list.termType;\n    object.value = _list.value;\n  } else {\n    // convert string/node object to RDF\n    const id = types.isObject(item) ? item['@id'] : item;\n    object.termType = id.startsWith('_:') ? 'BlankNode' : 'NamedNode';\n    object.value = id;\n  }\n\n  // skip relative IRIs, not valid RDF\n  if(object.termType === 'NamedNode' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) &&\n  (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\napi.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: [\n      'href', 'scheme', 'authority', 'path', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: [\n      'href', 'protocol', 'scheme', 'authority', 'auth', 'user', 'password',\n      'hostname', 'port', 'path', 'directory', 'file', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\napi.parse = (str, parser) => {\n  const parsed = {};\n  const o = api.parsers[parser || 'full'];\n  const m = o.regex.exec(str);\n  let i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n\n  // remove default ports in found in URLs\n  if((parsed.scheme === 'https' && parsed.port === '443') ||\n    (parsed.scheme === 'http' && parsed.port === '80')) {\n    parsed.href = parsed.href.replace(':' + parsed.port, '');\n    parsed.authority = parsed.authority.replace(':' + parsed.port, '');\n    parsed.port = null;\n  }\n\n  parsed.normalizedPath = api.removeDotSegments(parsed.path);\n  return parsed;\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\napi.prependBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(api.isAbsolute(iri)) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // parse given IRI\n  const rel = api.parse(iri);\n\n  // per RFC3986 5.2.2\n  const transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        let path = base.path;\n\n        // append relative path to the end of the last directory from base\n        path = path.substr(0, path.lastIndexOf('/') + 1);\n        if((path.length > 0 || base.authority) && path.substr(-1) !== '/') {\n          path += '/';\n        }\n        path += rel.path;\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  if(rel.path !== '') {\n    // remove slashes and dots in path\n    transform.path = api.removeDotSegments(transform.path);\n  }\n\n  // construct URL\n  let rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\napi.removeBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // establish base root\n  let root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  const rel = api.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  const baseSegments = base.normalizedPath.split('/');\n  const iriSegments = rel.normalizedPath.split('/');\n  const last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  let rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(let i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n */\napi.removeDotSegments = path => {\n  // RFC 3986 5.2.4 (reworked)\n\n  // empty path shortcut\n  if(path.length === 0) {\n    return '';\n  }\n\n  const input = path.split('/');\n  const output = [];\n\n  while(input.length > 0) {\n    const next = input.shift();\n    const done = input.length === 0;\n\n    if(next === '.') {\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    if(next === '..') {\n      output.pop();\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    output.push(next);\n  }\n\n  // if path was absolute, ensure output has leading /\n  if(path[0] === '/' && output.length > 0 && output[0] !== '') {\n    output.unshift('');\n  }\n  if(output.length === 1 && output[0] === '') {\n    return '/';\n  }\n\n  return output.join('/');\n};\n\n// TODO: time better isAbsolute/isRelative checks using full regexes:\n// http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n\n// regex to check for absolute IRI (starting scheme and ':') or blank node IRI\nconst isAbsoluteRegex = /^([A-Za-z][A-Za-z0-9+-.]*|_):[^\\s]*$/;\n\n/**\n * Returns true if the given value is an absolute IRI or blank node IRI, false\n * if not.\n * Note: This weak check only checks for a correct starting scheme.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\napi.isAbsolute = v => types.isString(v) && isAbsoluteRegex.test(v);\n\n/**\n * Returns true if the given value is a relative IRI, false if not.\n * Note: this is a weak check.\n *\n * @param v the value to check.\n *\n * @return true if the value is a relative IRI, false if not.\n */\napi.isRelative = v => types.isString(v);\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\n// TODO: move `IdentifierIssuer` to its own package\nconst IdentifierIssuer = require('rdf-canonize').IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\n\n// constants\nconst REGEX_LINK_HEADERS = /(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g;\nconst REGEX_LINK_HEADER = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\nconst REGEX_LINK_HEADER_PARAMS =\n  /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\nconst DEFAULTS = {\n  headers: {\n    accept: 'application/ld+json, application/json'\n  }\n};\n\nconst api = {};\nmodule.exports = api;\napi.IdentifierIssuer = IdentifierIssuer;\n\n/**\n * Clones an object, array, Map, Set, or string/number. If a typed JavaScript\n * object is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(types.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(value instanceof Map) {\n      rval = new Map();\n      for(const [k, v] of value) {\n        rval.set(k, api.clone(v));\n      }\n    } else if(value instanceof Set) {\n      rval = new Set();\n      for(const v of value) {\n        rval.add(api.clone(v));\n      }\n    } else if(types.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Ensure a value is an array. If the value is an array, it is returned.\n * Otherwise, it is wrapped in an array.\n *\n * @param value the value to return as an array.\n *\n * @return the value as an array.\n */\napi.asArray = function(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\n/**\n * Builds an HTTP headers object for making a JSON-LD request from custom\n * headers and asserts the `accept` header isn't overridden.\n *\n * @param headers an object of headers with keys as header names and values\n *          as header values.\n *\n * @return an object of headers with a valid `accept` header.\n */\napi.buildHeaders = (headers = {}) => {\n  const hasAccept = Object.keys(headers).some(\n    h => h.toLowerCase() === 'accept');\n\n  if(hasAccept) {\n    throw new RangeError(\n      'Accept header may not be specified; only \"' +\n      DEFAULTS.headers.accept + '\" is supported.');\n  }\n\n  return Object.assign({Accept: DEFAULTS.headers.accept}, headers);\n};\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>;\n * rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\napi.parseLinkHeader = header => {\n  const rval = {};\n  // split on unbracketed/unquoted commas\n  const entries = header.match(REGEX_LINK_HEADERS);\n  for(let i = 0; i < entries.length; ++i) {\n    let match = entries[i].match(REGEX_LINK_HEADER);\n    if(!match) {\n      continue;\n    }\n    const result = {target: match[1]};\n    const params = match[2];\n    while((match = REGEX_LINK_HEADER_PARAMS.exec(params))) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    const rel = result['rel'] || '';\n    if(Array.isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rval.hasOwnProperty(rel)) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\napi.validateTypeValue = (v, isFrame) => {\n  if(types.isString(v)) {\n    return;\n  }\n\n  if(types.isArray(v) && v.every(vv => types.isString(vv))) {\n    return;\n  }\n  if(isFrame && types.isObject(v)) {\n    switch(Object.keys(v).length) {\n      case 0:\n        // empty object is wildcard\n        return;\n      case 1:\n        // default entry is all strings\n        if('@default' in v &&\n          api.asArray(v['@default']).every(vv => types.isString(vv))) {\n          return;\n        }\n    }\n  }\n\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n    'strings, an empty object, ' +\n    'or a default object.', 'jsonld.SyntaxError',\n    {code: 'invalid type value', value: v});\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\napi.hasProperty = (subject, property) => {\n  if(subject.hasOwnProperty(property)) {\n    const value = subject[property];\n    return (!types.isArray(value) || value.length > 0);\n  }\n  return false;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\napi.hasValue = (subject, property, value) => {\n  if(api.hasProperty(subject, property)) {\n    let val = subject[property];\n    const isList = graphTypes.isList(val);\n    if(types.isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(let i = 0; i < val.length; ++i) {\n        if(api.compareValues(value, val[i])) {\n          return true;\n        }\n      }\n    } else if(!types.isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      return api.compareValues(value, val);\n    }\n  }\n  return false;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [valueIsArray] true if the value to be added should be preserved as\n *          an array (lists) (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n *        [prependValue] false to prepend value to any existing values.\n *          (default: false)\n */\napi.addValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('valueIsArray' in options)) {\n    options.valueIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n  if(!('prependValue' in options)) {\n    options.prependValue = false;\n  }\n\n  if(options.valueIsArray) {\n    subject[property] = value;\n  } else if(types.isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !subject.hasOwnProperty(property)) {\n      subject[property] = [];\n    }\n    if(options.prependValue) {\n      value = value.concat(subject[property]);\n      subject[property] = [];\n    }\n    for(let i = 0; i < value.length; ++i) {\n      api.addValue(subject, property, value[i], options);\n    }\n  } else if(subject.hasOwnProperty(property)) {\n    // check if subject already has value if duplicates not allowed\n    const hasValue = (!options.allowDuplicate &&\n      api.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!types.isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      if(options.prependValue) {\n        subject[property].unshift(value);\n      } else {\n        subject[property].push(value);\n      }\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\napi.getValues = (subject, property) => [].concat(subject[property] || []);\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\napi.removeProperty = (subject, property) => {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\napi.removeValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  const values = api.getValues(subject, property).filter(\n    e => !api.compareValues(e, value));\n\n  if(values.length === 0) {\n    api.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] an IdentifierIssuer to use to label blank nodes.\n */\napi.relabelBlankNodes = (input, options) => {\n  options = options || {};\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\napi.compareValues = (v1, v2) => {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(graphTypes.isValue(v1) && graphTypes.isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(types.isObject(v1) &&\n    ('@id' in v1) &&\n    types.isObject(v2) &&\n    ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a === b.\n */\napi.compareShortestLeast = (a, b) => {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n};\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(types.isArray(element)) {\n    for(let i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(graphTypes.isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(types.isObject(element)) {\n    // relabel blank node\n    if(graphTypes.isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    const keys = Object.keys(element).sort();\n    for(let ki = 0; ki < keys.length; ++ki) {\n      const key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n *\n * @author Dave Longley\n *\n * Copyright 2010-2021 Digital Bazaar, Inc.\n */\nmodule.exports = require('./lib');\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015 {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  async main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    let i = 0;\n    for(const id of nonNormalized) {\n      // Note: batch hashing first degree quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // steps 5.3.1 and 5.3.2:\n      await this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = await this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  async hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = await md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  async hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  async hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = await this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      let i = 0;\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n        // Note: batch permutations 3 at a time\n        if(++i % 3 === 0) {\n          await this._yield();\n        }\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = await this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: await md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // Note: batch hashing related blank node quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.1) For each component in quad, if component is the subject, object,\n      // and graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      await Promise.all([\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.subject, position: 's',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.object, position: 'o',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.graph, position: 'g',\n          id, issuer, hashToRelated\n        })\n      ]);\n    }\n\n    return hashToRelated;\n  }\n\n  async _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = await this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  async _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = await this.hashRelatedBlankNode(\n      related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n\n  async _yield() {\n    return new Promise(resolve => setImmediate(resolve));\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\n\nmodule.exports = class URDNA2012 extends URDNA2015 {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // Note: batch hashing related blank nodes 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = await this.hashRelatedBlankNode(\n        related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015Sync = require('./URDNA2015Sync');\n\nmodule.exports = class URDNA2012Sync extends URDNA2015Sync {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n * This library works in the browser and node.js.\n *\n * BSD 3-Clause License\n * Copyright (c) 2016-2021 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\nconst URGNA2012 = require('./URGNA2012');\nconst URDNA2015Sync = require('./URDNA2015Sync');\nconst URGNA2012Sync = require('./URGNA2012Sync');\n\n// optional native support\nlet rdfCanonizeNative;\ntry {\n  rdfCanonizeNative = require('rdf-canonize-native');\n} catch(e) {}\n\nconst api = {};\nmodule.exports = api;\n\n// expose helpers\napi.NQuads = require('./NQuads');\napi.IdentifierIssuer = require('./IdentifierIssuer');\n\n/**\n * Get or set native API.\n *\n * @param api the native API.\n *\n * @return the currently set native API.\n */\napi._rdfCanonizeNative = function(api) {\n  if(api) {\n    rdfCanonizeNative = api;\n  }\n  return rdfCanonizeNative;\n};\n\n/**\n * Asynchronously canonizes an RDF dataset.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return a Promise that resolves to the canonicalized RDF Dataset.\n */\napi.canonize = async function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(!rdfCanonizeNative) {\n      throw new Error('rdf-canonize-native not available');\n    }\n    // TODO: convert native algorithm to Promise-based async\n    return new Promise((resolve, reject) =>\n      rdfCanonizeNative.canonize(dataset, options, (err, canonical) =>\n        err ? reject(err) : resolve(canonical)));\n  }\n\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n\n/**\n * This method is no longer available in the public API, it is for testing\n * only. It synchronously canonizes an RDF dataset and does not work in the\n * browser.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return the RDF dataset in canonical form.\n */\napi._canonizeSync = function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(rdfCanonizeNative) {\n      return rdfCanonizeNative.canonizeSync(dataset, options);\n    }\n    throw new Error('rdf-canonize-native not available');\n  }\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015Sync(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012Sync(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n"],"names":["Sink","SerializerStream","Serializer","constructor","options","super","module","exports","jsonld","Readable","streamConcat","input","context","compact","flatten","frame","skipContext","encoding","objectMode","read","this","on","prefix","namespace","value","handleData","async","quadArray","map","toJsonldQuad","rawJsonld","fromRDF","transformedJsonld","transform","push","err","emit","data","JSON","stringify","static","quad","subject","toJsonldTerm","predicate","object","graph","term","termType","concatStream","stream","Promise","resolve","reject","pipe","content","Writable","inherits","bufferFrom","Uint8Array","U8","ConcatStream","opts","cb","shouldInferEncoding","String","toLowerCase","call","getBody","body","prototype","_write","chunk","enc","next","inferEncoding","buff","firstBuffer","undefined","Buffer","isBuffer","Array","isArray","Object","toString","length","arrayConcat","stringConcat","bufferConcat","u8Concat","isArrayish","arr","test","isBufferish","p","subarray","parts","strings","i","concat","join","bufs","res","apply","len","u8","offset","part","j","_isArray","isObject","_isObject","isString","_isString","asArray","_asArray","prependBase","JsonLdError","ResolvedContext","MAX_CONTEXT_URLS","_throwInvalidLocalContext","ctx","code","_resolveContextUrls","base","element","sharedCache","perOpCache","Map","activeCtx","documentLoader","cycles","Set","allResolved","resolved","_get","_resolveRemoteContext","url","document","key","_cacheResolvedContext","tag","get","tagMap","set","remoteDoc","_fetchContext","documentUrl","size","processingMode","max","has","add","parse","e","cause","contextUrl","Error","message","name","details","JsonLdProcessor","defineProperty","writable","enumerable","configurable","arguments","TypeError","expand","_requests","wrapLoader","loader","self","_loader","promise","LRU","MAX_ACTIVE_CONTEXTS","cache","getProcessed","setProcessed","processedCtx","isUndefined","_isUndefined","isList","_isList","isValue","_isValue","isGraph","_isGraph","isSimpleGraph","_isSimpleGraph","isSubjectReference","_isSubjectReference","expandIri","_expandIri","getContextValue","_getContextValue","isKeyword","_isKeyword","process","_processContext","_processingMode","removeBase","_removeBase","_prependBase","addValue","_addValue","compareShortestLeast","_compareShortestLeast","api","_selectTerm","iri","containers","typeOrLanguage","typeOrLanguageValue","prefs","compactIri","relativeTo","vocab","mappings","langDir","find","el","includes","replace","containerMap","inverse","container","typeOrLanguageValueMap","pref","_checkNestProperty","nestProperty","activeProperty","compactionMap","rval","compacted","unmappedValue","parent","index","compactArrays","localCtx","propagate","overrideProtected","link","hasOwnProperty","linked","expanded","compactValue","insideReverse","inputCtx","revertToPreviousContext","propertyScopedCtx","types","from","sort","typeContext","type","compactedType","keys","expandedProperty","expandedValue","alias","itemActiveProperty","reverse","nestResult","propertyIsArray","expandedItem","inner","compactedItem","valueIsArray","allowDuplicate","mapObject","indexKey","containerKey","others","idKey","typeKey","compactedValue","compactedProperty","useArray","expandedIri","typeAsSet","isPropertyTermScoped","previousContext","inverseCtx","getInverse","defaultLanguage","list","commonLanguage","commonType","item","itemLanguage","itemType","lang","dir","indexOf","suffix","substr","choice","partialMatches","iriMap","fastCurieMap","maxPartialLength","entry","terms","curie","isUsableCurie","_prefix","td","startsWith","language","direction","preserveIndex","keyCount","isValueOnlyKey","hasDefaultLanguage","isValueString","hasNullMapping","RDF","XSD","LINK_HEADER_REL","LINK_HEADER_CONTEXT","RDF_LIST","RDF_FIRST","RDF_REST","RDF_NIL","RDF_TYPE","RDF_PLAIN_LITERAL","RDF_XML_LITERAL","RDF_JSON_LITERAL","RDF_OBJECT","RDF_LANGSTRING","XSD_BOOLEAN","XSD_DOUBLE","XSD_INTEGER","XSD_STRING","util","isAbsolute","_isAbsoluteIri","isRelative","_isRelativeIri","INITIAL_CONTEXT_CACHE","INITIAL_CONTEXT_CACHE_MAX_SIZE","KEYWORD_PATTERN","defined","match","createTermDefinition","mapping","colon","_deepCompare","x1","x2","x1Array","k1s","k2s","k1","v1","v2","slice","ctxs","contextResolver","clone","resolvedContext","protected","protectedMode","console","warn","processed","oldActiveCtx","getInitialContext","_protected","entries","resolvedImport","processedImport","importCtx","keyCtx","validKeys","some","k","previousMapping","delete","simpleTerm","kw","_termHasColon","id","termDefined","termIri","validContainers","isValid","hasSet","every","c","nest","cached","initialContext","_createInverseContext","_cloneActiveContext","_revertToPreviousContext","clear","irisToTerms","defaultDirection","ids","fastCurieEntry","_addPreferredTerm","_buildIriMap","idx","letter","child","version","v","parseLinkHeader","buildHeaders","RequestQueue","REGEX_LINK_HEADER","xhr","headers","XMLHttpRequest","req","onload","onerror","open","setRequestHeader","send","secure","queue","status","statusText","httpStatusCode","doc","response","alternate","contentType","getResponseHeader","linkHeader","getAllResponseHeaders","linkHeaders","linkedContext","target","isEmptyObject","_isEmptyObject","isSubject","_isSubject","getValues","_getValues","validateTypeValue","_validateTypeValue","REGEX_BCP47","_expandObject","expandedActiveProperty","expandedParent","insideList","typeScopedContext","expansionMap","nests","unexpandedValue","isJsonType","unmappedProperty","keyword","isFrame","fromEntries","vv","includedResult","property","reverseMap","items","ii","termCtx","_expandLanguageMap","asGraph","propertyIndex","_expandIndexMap","nextActiveProperty","nestedValues","nv","_expandValue","languageMap","expandedKey","val","isTypeIndex","insideIndex","prependValue","assign","mapped","mustRevert","count","validCount","values","t","keepFreeFloatingNodes","createMergedNodeMap","_createMergedNodeMap","defaultGraph","flattened","ki","node","graphTypes","createNodeMap","_createNodeMap","mergeNodeMapGraphs","_mergeNodeMapGraphs","_createImplicitFrame","flags","_createsCircularReference","subjectToEmbed","subjectStack","_getFrameFlag","flag","_validateFrame","_filterSubjects","state","subjects","graphMap","_filterSubject","wildcard","matchesSome","matchThis","nodeValues","isEmpty","requireAll","tt","thisFrame","hasDefault","listValue","nodeListValues","lv","_valueMatch","_nodeMatch","_removeEmbed","embeds","uniqueEmbeds","embed","compareValues","removeValue","removeDependents","_cleanupPreserve","prop","bnodesToClear","_addFrameOutput","output","pattern","nodeObject","t1","l1","t2","l2","frameMergedOrDefault","embedded","bnodeMap","issuer","IdentifierIssuer","merged","framed","pruneBlankNodeIdentifiers","filter","explicit","matches","is11","recurse","subframe","o","src","oo","omitDefaultOn","preserve","reverseProp","pop","cleanupNull","noNulls","_RDFToObject","useNativeTypes","rdfDirection","endsWith","datatype","isNumeric","parseInt","toFixed","parseFloat","split","dataset","useRdfType","referencedOnce","nodeMap","s","objectIsNode","usages","graphObject","nil","usage","head","listNodes","nodeKeyCount","isBlankNode","listNode","result","graphSubjects","graphSubject","canonize","platform","ContextResolver","NQuads","_expand","_flatten","_fromRDF","toRDF","_toRDF","_frameMergedOrDefault","_cleanupNull","_getInitialContext","_compact","_compactIri","mergeNodeMaps","_mergeNodeMaps","wrapper","_rdfParsers","RESOLVED_CONTEXT_CACHE_MAX_SIZE","_resolvedContextCache","_setDefaults","defaults","compactToRelative","skipExpansion","processContext","tmp","hasContext","graphAlias","toResolve","contextsToProcess","expandContext","defaultBase","remoteContext","omitDefault","frameContext","omitGraph","expandedFrame","frameKeys","framing","normalize","algorithm","inputFormat","parsedInput","format","produceGeneralizedRdf","rdfParser","parsedDataset","serialize","merge","docs","all","mergeNodes","graphs","relabelBlankNodes","_graphs","graphName","_nodeMap","_documentLoader","load","documentLoaders","useDocumentLoader","registerRDFParser","parser","unregisterRDFParser","promises","setupGlobals","setupDocumentLoaders","factory","getId","_list","properties","referencedNode","reverseProperty","itemName","objects","mergedNode","graphNames","xhrLoader","globalThis","jsonCanonicalize","_graphToRDF","graphTerm","_objectToRDF","_listToRDF","first","rest","last","isBoolean","isDouble","toExponential","isNumber","Math","abs","isNaN","isFinite","parsers","simple","regex","full","str","parsed","m","exec","scheme","port","href","authority","normalizedPath","removeDotSegments","path","rel","protocol","query","lastIndexOf","fragment","root","baseSegments","iriSegments","shift","done","unshift","isAbsoluteRegex","REGEX_LINK_HEADERS","REGEX_LINK_HEADER_PARAMS","DEFAULTS","accept","_labelBlankNodes","hasAccept","h","RangeError","Accept","header","params","hasProperty","hasValue","removeProperty","a","b","Yallist","MAX","Symbol","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","trim","allowStale","mA","lengthCalculator","lC","forEach","hit","itemCount","rforEach","fn","thisp","walker","tail","prev","forEachStep","toArray","dump","isStale","now","dumpLru","Date","del","Entry","peek","l","expiresAt","prune","doUse","unshiftNode","diff","removeNode","MessageDigest","Permuter","_stringHashCompare","hash","blankNodeInfo","canonicalIssuer","hashAlgorithm","quads","_addBlankNodeQuadInfo","component","hashToBlankNodes","nonNormalized","_yield","_hashAndTrackBlankNode","hashes","nonUnique","idList","hashPathList","hasId","hashNDegreeQuads","oldIds","getOldIds","normalized","q","_useCanonicalId","serializeQuad","nquads","info","copy","modifyFirstDegreeComponent","md","nquad","update","digest","related","position","getRelatedPredicate","hashToRelated","createHashToRelated","chosenIssuer","chosenPath","permuter","hasNext","permutation","issuerCopy","recursionList","nextPermutation","_addRelatedBlankNodeHash","hashFirstDegreeQuads","hashRelatedBlankNode","setImmediate","URDNA2015","URDNA2015Sync","URGNA2012","URGNA2012Sync","rdfCanonizeNative","_rdfCanonizeNative","legacyDatasetToQuads","useNative","canonical","main","_canonizeSync","canonizeSync","iterator","insert","inserted","Node","create","pushNode","forEachReverse","n","getReverse","mapReverse","reduce","initial","acc","reduceReverse","toArrayReverse","to","ret","sliceReverse","splice","start","deleteCount","nodes","er"],"sourceRoot":""}